[{"C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\index.js":"1","C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\App.js":"2","C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\pages\\Admin\\Admin.js":"3","C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\components\\Navbar\\Navbar.js":"4","C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\helpers\\routes.js":"5","C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\components\\RscaLogo\\RscaLogo.js":"6","C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\components\\DataVisualizationSVG\\DataVisualizationSVG.js":"7","C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\hooks\\useFormData.js":"8","C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\components\\UserDetails\\UserDetails.js":"9","C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\settings.js":"10","C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\components\\classFiltersList\\ClassFiltersList.js":"11","C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\helpers\\calendar.js":"12","C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\components\\postList\\PostListItem.js":"13","C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\pages\\Signin\\Signin.js":"14","C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\components\\PasswordResetModal\\index.js":"15","C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\contexts\\AuthContext\\AuthProvider.js":"16","C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\pages\\Home\\Home.js":"17","C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\pages\\Search\\Search.js":"18","C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\pages\\PostsPage\\PostMapPage.js":"19","C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\helpers\\formValidation.js":"20","C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\components\\Footer\\Footer.js":"21","C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\components\\SigninForm\\SigninForm.js":"22","C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\components\\UsersList\\UsersList.js":"23","C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\components\\postList\\PostList.js":"24","C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\components\\Date\\Date.js":"25","C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\components\\Posts\\index.js":"26","C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\pages\\ROISearch\\ROISearch.js":"27","C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\components\\SignupForm\\SignupForm.js":"28"},{"size":445,"mtime":1613984498459,"results":"29","hashOfConfig":"30"},{"size":2209,"mtime":1616348770024,"results":"31","hashOfConfig":"30"},{"size":6616,"mtime":1616068453197,"results":"32","hashOfConfig":"30"},{"size":6762,"mtime":1616348778659,"results":"33","hashOfConfig":"30"},{"size":996,"mtime":1616407598829,"results":"34","hashOfConfig":"30"},{"size":283,"mtime":1613984498439,"results":"35","hashOfConfig":"30"},{"size":323,"mtime":1613984498428,"results":"36","hashOfConfig":"30"},{"size":410,"mtime":1613984498458,"results":"37","hashOfConfig":"30"},{"size":3911,"mtime":1613984498445,"results":"38","hashOfConfig":"30"},{"size":267,"mtime":1616173704267,"results":"39","hashOfConfig":"30"},{"size":2518,"mtime":1613984498448,"results":"40","hashOfConfig":"30"},{"size":89,"mtime":1613984498454,"results":"41","hashOfConfig":"30"},{"size":3219,"mtime":1613984498450,"results":"42","hashOfConfig":"30"},{"size":848,"mtime":1616396805321,"results":"43","hashOfConfig":"30"},{"size":5074,"mtime":1616400305972,"results":"44","hashOfConfig":"30"},{"size":3457,"mtime":1614248738898,"results":"45","hashOfConfig":"30"},{"size":463,"mtime":1614250870031,"results":"46","hashOfConfig":"30"},{"size":5843,"mtime":1616068406408,"results":"47","hashOfConfig":"30"},{"size":4463,"mtime":1616173704266,"results":"48","hashOfConfig":"30"},{"size":903,"mtime":1613984498455,"results":"49","hashOfConfig":"30"},{"size":309,"mtime":1613984498433,"results":"50","hashOfConfig":"30"},{"size":2440,"mtime":1616394790456,"results":"51","hashOfConfig":"30"},{"size":1073,"mtime":1613984498447,"results":"52","hashOfConfig":"30"},{"size":4877,"mtime":1613984498449,"results":"53","hashOfConfig":"30"},{"size":1077,"mtime":1613984498430,"results":"54","hashOfConfig":"30"},{"size":1774,"mtime":1616408199352,"results":"55","hashOfConfig":"30"},{"size":2665,"mtime":1616068773896,"results":"56","hashOfConfig":"30"},{"size":3767,"mtime":1613984498442,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f4lj3",{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\index.js",[],"C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\App.js",["119"],"C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\pages\\Admin\\Admin.js",[],["120","121"],"C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\components\\Navbar\\Navbar.js",[],"C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\helpers\\routes.js",[],"C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\components\\RscaLogo\\RscaLogo.js",[],"C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\components\\DataVisualizationSVG\\DataVisualizationSVG.js",[],"C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\hooks\\useFormData.js",[],"C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\components\\UserDetails\\UserDetails.js",[],"C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\settings.js",[],"C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\components\\classFiltersList\\ClassFiltersList.js",[],"C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\helpers\\calendar.js",[],"C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\components\\postList\\PostListItem.js",["122"],"import React, { useContext, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport RoomOutlinedIcon from \"@material-ui/icons/RoomOutlined\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { PostsContext } from \"../../contexts/PostsContext/postContext\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nexport default function PostListItem(props) {\r\n  const {\r\n    removePostFromFilteredPosts,\r\n    importPostFromFilteredPosts,\r\n    showAll,\r\n    setSelectedPostID\r\n  } = useContext(PostsContext);\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState(showAll);\r\n\r\n\r\n  const handleClick = () => {\r\n    console.log(\"handle click called\");\r\n    if (!checked) {\r\n      return;\r\n    } else {\r\n      props.onPostItemClick(props.postID, checked);\r\n    }\r\n\r\n  };\r\n\r\n  const handleCheckChange = () => {\r\n\r\n    if(checked){\r\n      setSelectedPostID(-1)\r\n      removePostFromFilteredPosts(props.postID)\r\n    }else{\r\n      setSelectedPostID(props.postID)\r\n      importPostFromFilteredPosts(props.postID)\r\n    }\r\n    setChecked(!checked);\r\n  };\r\n\r\n\r\n  useEffect(()=>{\r\n    setChecked(showAll)\r\n    setSelectedPostID(-1)\r\n  },[showAll])\r\n\r\n  return (\r\n    <div>\r\n      <ListItem button key={props.innerKey} selected={props.selected} autoFocus={props.selected}>\r\n        <ListItemIcon>\r\n          <Checkbox\r\n            edge=\"start\"\r\n            checked={checked}\r\n            tabIndex={-1}\r\n            disableRipple\r\n            inputProps={{ \"aria-labelledby\": props.postID }}\r\n            onChange={handleCheckChange}\r\n          />\r\n        </ListItemIcon>\r\n        <ListItemText primary={props.postTitle} id={props.postID} onClick={handleClick} />\r\n        {(props.selected) ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={(props.selected)} timeout=\"auto\" unmountOnExit>\r\n        {props.markers ? (\r\n          <List component=\"div\" disablePadding>\r\n            {props.markers.map((marker) => (\r\n              <ListItem\r\n                button\r\n                className={classes.nested}\r\n                onClick={() => props.onMarkerClick(marker.id)}\r\n                key={marker.id}\r\n              >\r\n                <ListItemIcon>\r\n                  <RoomOutlinedIcon />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary={\r\n                    \"Post ID: \" +\r\n                    marker.postID +\r\n                    \" | Classes :\" +\r\n                    marker.classes\r\n                  }\r\n                />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        ) : null}\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\pages\\Signin\\Signin.js",[],"C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\components\\PasswordResetModal\\index.js",[],"C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\contexts\\AuthContext\\AuthProvider.js",[],"C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\pages\\Home\\Home.js",[],"C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\pages\\Search\\Search.js",["123","124"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { message, Spin } from \"antd\";\r\nimport Calendar from \"../../components/Calendar/Calendar\";\r\nimport Navbar from \"../../components/Navbar/Navbar\";\r\nimport { PostsContext } from \"../../contexts/PostsContext/postContext\";\r\nimport { Select } from \"antd\";\r\nimport ROISearch from \"../ROISearch/ROISearch\";\r\nimport \"./search.css\";\r\nimport { getAccessAuthHeader } from \"../../helpers/localStorage\";\r\nimport { GET_POSTS_BY_DATE_RANGE, GET_POSTS_BY_ROI } from \"../../helpers/routes\";\r\nimport axios from \"axios\";\r\nimport { authContext } from \"../../contexts/AuthContext/AuthProvider\";\r\n\r\nfunction Search() {\r\n\r\n  const [dates, setDates] = useState([]);\r\n  const [loadingPosts, setLoadingPosts] = useState(false);\r\n  const { setDates: setDatesInContext, isSearchingByDates, toggleSearchToDates, toggleSearchToROI, dates: datesInContext, updatePostsFromResponse, clearAllData, searchingCords, setSearchingCords } = useContext(PostsContext);\r\n  const history = useHistory();\r\n\r\n  //auth stuff imported from auth context\r\n  const {\r\n    refreshAccessToken //function to refresh access token if it expires {returns promise}\r\n    , logout // function to logout if something happens in auth process\r\n  } = useContext(authContext);\r\n\r\n  const fetchDataByDates = () => {\r\n    //configuration for get request\r\n    const config = {\r\n      //access token in header for jwt auth\r\n      headers: getAccessAuthHeader(),\r\n      //start date and end date as url get patterns\r\n      params: {\r\n        start_date: dates[0],\r\n        end_date: dates[1]\r\n      }\r\n    };\r\n    fetchPosts(GET_POSTS_BY_DATE_RANGE, config);\r\n\r\n  };\r\n\r\n  function fetchPosts(url, config) {\r\n    setLoadingPosts(true);\r\n    //perform get request with config\r\n    axios\r\n      .get(url, config)\r\n      .then((response) => {\r\n        //if request successfully gets data them clean and update state\r\n        console.log(response.data);\r\n        updatePostsFromResponse(response);\r\n        setLoadingPosts(false);\r\n        if (response.status === 204) {\r\n          message.info(\"No data found\");\r\n        } else {\r\n          history.push(\"/posts\");\r\n        }\r\n\r\n      })\r\n      .catch((err) => {\r\n        //if we get some error the\r\n        //if it is error due to token invalidation\r\n        if (err.response.status === 401) {\r\n          //refresh the token\r\n          refreshAccessToken().then((response) => {\r\n            //if refresh token is successful\r\n            //send request again\r\n            axios\r\n              .get(url, config)\r\n              .then(response => {\r\n                //if data comes successfully then update posts\r\n                updatePostsFromResponse(response);\r\n                setLoadingPosts(false);\r\n                if (response.status === 204) {\r\n                  message.info(\"No data found\");\r\n                } else {\r\n                  history.push(\"/posts\");\r\n                }\r\n              }).catch(err => {\r\n                //if error in second time fetch\r\n                setLoadingPosts(false);\r\n                message.error(err.response.statusText);\r\n              });\r\n          }).catch(err => {\r\n            //if there is error with error in fetching token\r\n            logout();\r\n          });\r\n        }\r\n        // If the error is not because of token\r\n        console.log(\"Error Reading data \" + err);\r\n        setLoadingPosts(false);\r\n      });\r\n  }\r\n\r\n  const fetchDataByROI = () => {\r\n    if (!searchingCords || searchingCords.length === 0) {\r\n      message.error(\"Please select any area first...\");\r\n      return;\r\n    }\r\n    const config = {\r\n      //access token in header for jwt auth\r\n      headers: getAccessAuthHeader(),\r\n\r\n      params: {\r\n        coordinates: searchingCords[0].map(obj => obj.lat + \",\" + obj.lng).reduce((a, b) => a + \"|\" + b)\r\n      }\r\n    };\r\n    setSearchingCords([]);\r\n    fetchPosts(GET_POSTS_BY_ROI, config);\r\n  };\r\n\r\n  useEffect(() => {\r\n    clearAllData();\r\n  }, []);\r\n\r\n  function handleClick() {\r\n    if (isSearchingByDates()) {\r\n      console.log(dates, \"ye rhi dates\");\r\n      // eslint-disable-next-line\r\n      if (dates[0] == undefined || dates[1] == undefined) {\r\n        message.error(\"Please select the start and end dates\");\r\n        return;\r\n      } else {\r\n        setDatesInContext(dates);\r\n        fetchDataByDates();\r\n      }\r\n    } else {\r\n      fetchDataByROI();\r\n    }\r\n  }\r\n\r\n  function handleSearchByChange(e) {\r\n    if (e === \"dates\") {\r\n      toggleSearchToDates();\r\n    } else if (e === \"roi\") {\r\n      toggleSearchToROI();\r\n    }\r\n  }\r\n\r\n  console.log(\"search page rerendring\");\r\n\r\n  return (\r\n    <div className=\"search-container\">\r\n      <Navbar />\r\n      <main className=\"main-content-search\">\r\n        <div className=\"buttons-container\">\r\n\r\n          <Select defaultValue=\"dates\" style={{ width: \"30%\", margin: \"10px\" }} onChange={handleSearchByChange}>\r\n            <Select.Option value=\"dates\">Search By Dates</Select.Option>\r\n            <Select.Option value=\"roi\">Search By ROI</Select.Option>\r\n          </Select>\r\n        </div>\r\n        {\r\n\r\n          isSearchingByDates() ? (\r\n            <div className=\"calender-and-filters-container\">\r\n              {\r\n                loadingPosts ? <Spin className=\"loader\" size=\"large\" tip={\"Fetching posts...\"} /> :\r\n                  <Calendar setDates={setDates} />\r\n              }\r\n            </div>\r\n          ) : (\r\n            loadingPosts ? <Spin className=\"loader\" size=\"large\" tip={\"Fetching posts...\"} /> :\r\n              <ROISearch />\r\n          )\r\n        }\r\n\r\n        <button onClick={() => {\r\n          if (!loadingPosts) {\r\n            handleClick();\r\n          }\r\n        }} className=\"search-button\">Search\r\n        </button>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\pages\\PostsPage\\PostMapPage.js",["125","126","127","128"],"//react stuff\r\nimport React, { useEffect, useContext } from \"react\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n//for showing maps\r\nimport {\r\n  MapContainer,\r\n  TileLayer,\r\n  Marker,\r\n  Popup,\r\n  Polyline,\r\n  useMap\r\n} from \"react-leaflet-3\";\r\n//pages own css\r\nimport \"./postMapPage.css\";\r\n//for showing marker currently\r\nimport L from \"leaflet\";\r\n//class filters side component\r\nimport ClassFiltersList from \"../../components/classFiltersList/ClassFiltersList\";\r\n//context for the whole page\r\nimport { PostsContext } from \"../../contexts/PostsContext/postContext\";\r\n//to get random options for post path vector\r\nimport { getRandomColorOptions } from \"../../helpers/postsHandlingUtils\";\r\n//side list component for showing post lists\r\nimport PostList from \"../../components/postList/PostList\";\r\n//urls on which requests will be sent\r\nimport { GET_POSTS_BY_DATE_RANGE, BASE } from \"../../helpers/routes\";\r\n//marker icons for map\r\nimport icon from \"leaflet/dist/images/marker-icon.png\";\r\nimport iconShadow from \"leaflet/dist/images/marker-shadow.png\";\r\n//auth context for whole application\r\nimport { authContext } from \"../../contexts/AuthContext/AuthProvider\";\r\n//side menu for page\r\nimport Navbar from \"../../components/Navbar/Navbar\";\r\nimport { storages, BACKEND_STATIC_STORAGE } from \"../../settings\";\r\n//-----setting marker icon settings and stuff------\r\nlet DefaultIcon = L.icon({\r\n  iconUrl: icon,\r\n  shadowUrl: iconShadow,\r\n  iconAnchor: [12, 41]\r\n});\r\n\r\n\r\nL.Marker.prototype.options.icon = DefaultIcon;\r\n\r\n//-------------------------------------------------\r\n\r\nfunction PostMapPage() {\r\n  //stuff imported from page context that will be used here\r\n  const {\r\n    filteredPosts//these posts will be rendered on map\r\n    , center//center for the whole map\r\n    , markerToShow//the only marker that will be shown at a time\r\n    , setCenter,\r\n    posts,\r\n    setSelectedPostID\r\n  } = useContext(\r\n    PostsContext\r\n  );\r\n\r\n\r\n  /**\r\n   * invisible component inside map to move maps visible area\r\n   * @param center- new center for map\r\n   * @param zoom- new zoom level for map\r\n   */\r\n  function ChangeView({ center, zoom }) {\r\n    const map = useMap();\r\n    map.setView(center, zoom);\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Marker component to be rendered on map\r\n   * @param props- contains marker object\r\n   * @returns {JSX.Element}\r\n   */\r\n  function CustomMarker(props) {\r\n    return (\r\n      <Marker\r\n        position={[props.marker.lat, props.marker.lon]}\r\n        key={props.marker.id}\r\n      >\r\n        <Popup>\r\n          {\r\n            BACKEND_STATIC_STORAGE == storages.LOCAL_FS ? (\r\n              <img\r\n                src={BASE + props.marker.imagePath.substring(1)}\r\n                width={200}\r\n                height={200}\r\n                alt=\"\"\r\n              />\r\n            ) : (\r\n              <img\r\n                src={props.marker.imagePath}\r\n                width={200}\r\n                height={200}\r\n                alt=\"\"\r\n              />\r\n            )\r\n          }\r\n\r\n        </Popup>\r\n      </Marker>\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    posts?.map(p => setCenter(p.completePath[0]));\r\n  }, [posts]);\r\n\r\n  function handleVectorClick(postid) {\r\n    setSelectedPostID(postid);\r\n  }\r\n\r\n  return (\r\n    <div className=\"posts-container\">\r\n      <Navbar />\r\n      <div className=\"map-container-mine\">\r\n        <MapContainer\r\n          center={center}\r\n          zoom={25}\r\n          scrollWheelZoom={true}\r\n          style={{ height: \"100vh\" }}\r\n        >\r\n          <TileLayer\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n          <ChangeView center={center} zoom={25} scrollWheelZoom={false} />\r\n          {filteredPosts.map((post) => (\r\n            <Polyline\r\n              pathOptions={getRandomColorOptions()}\r\n              positions={post.completePath}\r\n              key={post.id}\r\n              eventHandlers={{\r\n                click: () => {\r\n                  handleVectorClick(post.id);\r\n                }\r\n              }}\r\n            />\r\n          ))}\r\n          {markerToShow !== null ? (\r\n            <CustomMarker marker={markerToShow} center={center} zoom={25} />\r\n          ) : null}\r\n        </MapContainer>\r\n      </div>\r\n      <div className=\"side-lists\">\r\n        <ClassFiltersList />\r\n        <PostList />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostMapPage;\r\n","C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\helpers\\formValidation.js",[],"C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\components\\SigninForm\\SigninForm.js",[],"C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\components\\UsersList\\UsersList.js",[],"C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\components\\postList\\PostList.js",["129"],"import React, { useContext, useEffect } from \"react\";\r\nimport PostListItem from \"./PostListItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { PostsContext } from \"../../contexts/PostsContext/postContext\";\r\nimport axios from \"axios\";\r\nimport { getAccessAuthHeader } from \"../../helpers/localStorage\";\r\nimport { GET_POST_MARKERS_BY_POST_ID } from \"../../helpers/routes\";\r\nimport { message } from \"antd\";\r\nimport { authContext } from \"../../contexts/AuthContext/AuthProvider\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nexport default function PostList(props) {\r\n  const classes = useStyles();\r\n  const {\r\n    filteredMarkers,\r\n    setFilteredMarkers,\r\n    setMarkerToShow,\r\n    markers,\r\n    setCenter,\r\n    posts,\r\n    updateMarkersFromResponse,\r\n    filters,\r\n    showAll,\r\n    setShowAll,\r\n    resetFilteredPosts,\r\n    populateFilteredPostsWithAll,\r\n    selectedPostID,\r\n    setSelectedPostID\r\n  } = useContext(PostsContext);\r\n  const { refreshAccessToken, logout } = useContext(authContext);\r\n\r\n  function handleMarkerClick(markerID) {\r\n    console.log(markerID);\r\n    const marker = filteredMarkers.find((marker) => marker.id === markerID);\r\n    console.log(marker);\r\n    setMarkerToShow(marker);\r\n    setCenter([marker.lat, marker.lon]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fil = markers.filter((marker) => {\r\n      for (let i = 0; i < marker.classes.length; i++) {\r\n        if (filters.includes(marker.classes[i])) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    });\r\n    setFilteredMarkers(fil);\r\n  }, [markers, filters, setFilteredMarkers]);\r\n\r\n  useEffect(() => {\r\n    if (showAll) {\r\n      populateFilteredPostsWithAll();\r\n    } else {\r\n      resetFilteredPosts();\r\n    }\r\n  }, [showAll]);\r\n\r\n  function handlePostsClick(postIDs) {\r\n    setSelectedPostID(postIDs)\r\n    const postClicked = posts.find((post) => post.id === postIDs);\r\n    setCenter(postClicked.completePath[0]);\r\n    if (postIDs.length === 0) return;\r\n    if (markers.find((marker) => marker.postID === postIDs)) {\r\n      return;\r\n    }\r\n\r\n    const idsString = postIDs.toString();\r\n    const config = {\r\n      headers: getAccessAuthHeader(),\r\n\r\n      params: {\r\n        post_id: idsString\r\n      }\r\n    };\r\n    const url = GET_POST_MARKERS_BY_POST_ID;\r\n    axios\r\n      .get(url, config)\r\n      .then((response) => {\r\n        updateMarkersFromResponse(response);\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.status === 401) {\r\n          //refresh the token\r\n          refreshAccessToken().then((response) => {\r\n            //if refresh token is successful\r\n            const config = {\r\n              headers: getAccessAuthHeader(),\r\n\r\n              params: {\r\n                post_id: idsString\r\n              }\r\n            };\r\n            //send request again\r\n            axios\r\n              .get(url, config)\r\n              .then(response => {\r\n                //if data comes successfully then update posts\r\n                updateMarkersFromResponse(response);\r\n              }).catch(err => {\r\n                //if error in second time fetch\r\n                message.error(err.response.statusText);\r\n              });\r\n          }).catch(err => {\r\n            //if there is error with error in fetching token\r\n            logout();\r\n          });\r\n        }\r\n        console.log(\"Error Reading data \" + err);\r\n      });\r\n  }\r\n\r\n\r\n  return (\r\n    <List\r\n      component=\"nav\"\r\n      aria-labelledby=\"nested-list-subheader\"\r\n      subheader={\r\n        <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n          <div>\r\n            <p>Posts</p>\r\n            <div style={{\r\n              display: \"flex\",\r\n              textAlign: \"center\"\r\n            }}>\r\n              <Checkbox checked={showAll} value={\"Show All\"} onChange={() => setShowAll(!showAll)} />\r\n              <p>Show all</p>\r\n            </div>\r\n            <hr />\r\n          </div>\r\n        </ListSubheader>\r\n      }\r\n      className={classes.root}\r\n    >\r\n      {posts.map((post, index) => {\r\n        var markersOfThisPost = filteredMarkers.filter(\r\n          (marker) => marker.postID === post.id\r\n        );\r\n        return (\r\n          <PostListItem\r\n            postTitle={post.title}\r\n            postID={post.id}\r\n            markers={markersOfThisPost}\r\n            onMarkerClick={handleMarkerClick}\r\n            onPostItemClick={handlePostsClick}\r\n            innerKey={post.key}\r\n            key={index}\r\n            selected={post.id===selectedPostID}\r\n          />\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n}\r\n","C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\components\\Date\\Date.js",[],"C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\components\\Posts\\index.js",[],"C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\pages\\ROISearch\\ROISearch.js",["130","131"],"C:\\Users\\DELL\\Desktop\\rsca_frontend\\src\\components\\SignupForm\\SignupForm.js",[],{"ruleId":"132","severity":1,"message":"133","line":2,"column":25,"nodeType":"134","messageId":"135","endLine":2,"endColumn":29},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":63,"column":5,"nodeType":"142","endLine":63,"endColumn":14,"suggestions":"143"},{"ruleId":"132","severity":1,"message":"144","line":19,"column":107,"nodeType":"134","messageId":"135","endLine":19,"endColumn":121},{"ruleId":"140","severity":1,"message":"145","line":114,"column":6,"nodeType":"142","endLine":114,"endColumn":8,"suggestions":"146"},{"ruleId":"132","severity":1,"message":"147","line":26,"column":10,"nodeType":"134","messageId":"135","endLine":26,"endColumn":33},{"ruleId":"132","severity":1,"message":"148","line":31,"column":10,"nodeType":"134","messageId":"135","endLine":31,"endColumn":21},{"ruleId":"149","severity":1,"message":"150","line":85,"column":36,"nodeType":"151","messageId":"152","endLine":85,"endColumn":38},{"ruleId":"140","severity":1,"message":"153","line":109,"column":6,"nodeType":"142","endLine":109,"endColumn":13,"suggestions":"154"},{"ruleId":"140","severity":1,"message":"155","line":71,"column":6,"nodeType":"142","endLine":71,"endColumn":15,"suggestions":"156"},{"ruleId":"132","severity":1,"message":"157","line":1,"column":40,"nodeType":"134","messageId":"135","endLine":1,"endColumn":50},{"ruleId":"132","severity":1,"message":"158","line":7,"column":10,"nodeType":"134","messageId":"135","endLine":7,"endColumn":16},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["159"],"no-negated-in-lhs",["160"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setSelectedPostID'. Either include it or remove the dependency array.","ArrayExpression",["161"],"'datesInContext' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'clearAllData'. Either include it or remove the dependency array.",["162"],"'GET_POSTS_BY_DATE_RANGE' is defined but never used.","'authContext' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'setCenter'. Either include it or remove the dependency array.",["163"],"React Hook useEffect has missing dependencies: 'populateFilteredPostsWithAll' and 'resetFilteredPosts'. Either include them or remove the dependency array.",["164"],"'MapControl' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},"Update the dependencies array to be: [setSelectedPostID, showAll]",{"range":"173","text":"174"},"Update the dependencies array to be: [clearAllData]",{"range":"175","text":"176"},"Update the dependencies array to be: [posts, setCenter]",{"range":"177","text":"178"},"Update the dependencies array to be: [populateFilteredPostsWithAll, resetFilteredPosts, showAll]",{"range":"179","text":"180"},[1738,1747],"[setSelectedPostID, showAll]",[4022,4024],"[clearAllData]",[3120,3127],"[posts, setCenter]",[2069,2078],"[populateFilteredPostsWithAll, resetFilteredPosts, showAll]"]