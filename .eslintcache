[{"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/index.js":"1","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/App.js":"2","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/helpers/routes.js":"3","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/Search/Search.js":"4","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/Signin/Signin.js":"5","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/Posts/index.js":"6","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/DataVisualizationSVG/DataVisualizationSVG.js":"7","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/FileUploader/FileUploader.js":"8","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/postList/PostList.js":"9","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/SigninForm/SigninForm.js":"10","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/PasswordResetModal/index.js":"11","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/User/User.js":"12","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/settings.js":"13","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/contexts/PostsContext/postContext.js":"14","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/Admin/Admin.js":"15","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/PostsPage/PostMapPage.js":"16","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/helpers/formValidation.js":"17","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/SignupForm/SignupForm.js":"18","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/UserDetails/UserDetails.js":"19","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/helpers/calendar.js":"20","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/postList/PostListItem.js":"21","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/Home/Home.js":"22","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/RscaLogo/RscaLogo.js":"23","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/Inputbox/Inputbox.js":"24","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/hooks/useFormData.js":"25","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/Navbar/Navbar.js":"26","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/classFiltersList/ClassFiltersList.js":"27","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/Date/Date.js":"28","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/ReportPDF/ReportPDF.js":"29","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/ROISearch/ROISearch.js":"30","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/Footer/Footer.js":"31","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/UsersList/UsersList.js":"32","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/Signup/Signup.js":"33","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/Calendar/Calendar.js":"34"},{"size":423,"mtime":1610633928586,"results":"35","hashOfConfig":"36"},{"size":2135,"mtime":1617862271240,"results":"37","hashOfConfig":"36"},{"size":1173,"mtime":1617867677881,"results":"38","hashOfConfig":"36"},{"size":5704,"mtime":1617864570914,"results":"39","hashOfConfig":"36"},{"size":824,"mtime":1617862271265,"results":"40","hashOfConfig":"36"},{"size":1722,"mtime":1617862271244,"results":"41","hashOfConfig":"36"},{"size":310,"mtime":1610633928571,"results":"42","hashOfConfig":"43"},{"size":3816,"mtime":1613384989874,"results":"44","hashOfConfig":"43"},{"size":4709,"mtime":1616656941230,"results":"45","hashOfConfig":"36"},{"size":2388,"mtime":1617862271245,"results":"46","hashOfConfig":"36"},{"size":4962,"mtime":1617862271243,"results":"47","hashOfConfig":"36"},{"size":459,"mtime":1616656951692,"results":"48","hashOfConfig":"43"},{"size":316,"mtime":1616657247934,"results":"49","hashOfConfig":"43"},{"size":5166,"mtime":1617865238814,"results":"50","hashOfConfig":"36"},{"size":6785,"mtime":1617862271256,"results":"51","hashOfConfig":"36"},{"size":7595,"mtime":1617879344006,"results":"52","hashOfConfig":"36"},{"size":875,"mtime":1610633928584,"results":"53","hashOfConfig":"36"},{"size":3687,"mtime":1610995228254,"results":"54","hashOfConfig":"36"},{"size":3958,"mtime":1617862271247,"results":"55","hashOfConfig":"36"},{"size":87,"mtime":1610633928583,"results":"56","hashOfConfig":"36"},{"size":3110,"mtime":1616656941232,"results":"57","hashOfConfig":"36"},{"size":446,"mtime":1617862271259,"results":"58","hashOfConfig":"36"},{"size":270,"mtime":1610633928576,"results":"59","hashOfConfig":"36"},{"size":916,"mtime":1610633928574,"results":"60","hashOfConfig":"36"},{"size":399,"mtime":1610633928585,"results":"61","hashOfConfig":"36"},{"size":6593,"mtime":1617862271242,"results":"62","hashOfConfig":"36"},{"size":2445,"mtime":1610634725889,"results":"63","hashOfConfig":"36"},{"size":1050,"mtime":1617862245414,"results":"64","hashOfConfig":"36"},{"size":1017,"mtime":1617879299851,"results":"65","hashOfConfig":"36"},{"size":2579,"mtime":1617862271262,"results":"66","hashOfConfig":"36"},{"size":297,"mtime":1610633928573,"results":"67","hashOfConfig":"36"},{"size":1113,"mtime":1617862271248,"results":"68","hashOfConfig":"36"},{"size":522,"mtime":1610633928589,"results":"69","hashOfConfig":"36"},{"size":8014,"mtime":1617862271241,"results":"70","hashOfConfig":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"1i3zi1o",{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"73"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fm48t8",{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"93"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/index.js",[],["147","148"],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/App.js",["149"],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/helpers/routes.js",[],["150","151"],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/Search/Search.js",["152","153"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { message, Spin } from \"antd\";\nimport Calendar from \"../../components/Calendar/Calendar\";\nimport Navbar from \"../../components/Navbar/Navbar\";\nimport { PostsContext } from \"../../contexts/PostsContext/postContext\";\nimport { Select } from \"antd\";\nimport ROISearch from \"../ROISearch/ROISearch\";\nimport \"./search.css\";\nimport { getAccessAuthHeader } from \"../../helpers/localStorage\";\nimport { GET_POSTS_BY_DATE_RANGE, GET_POSTS_BY_ROI } from \"../../helpers/routes\";\nimport axios from \"axios\";\nimport { authContext } from \"../../contexts/AuthContext/AuthProvider\";\n\nfunction Search() {\n\n  const [dates, setDates] = useState([]);\n  const [loadingPosts, setLoadingPosts] = useState(false);\n  const { setDates: setDatesInContext, isSearchingByDates, toggleSearchToDates, toggleSearchToROI, dates: datesInContext, updatePostsFromResponse, clearAllData, searchingCords, setSearchingCords } = useContext(PostsContext);\n  const history = useHistory();\n\n  //auth stuff imported from auth context\n  const {\n    refreshAccessToken //function to refresh access token if it expires {returns promise}\n    , logout // function to logout if something happens in auth process\n  } = useContext(authContext);\n\n  const fetchDataByDates = () => {\n    //configuration for get request\n    const config = {\n      //access token in header for jwt auth\n      headers: getAccessAuthHeader(),\n      //start date and end date as url get patterns\n      params: {\n        start_date: dates[0],\n        end_date: dates[1]\n      }\n    };\n    fetchPosts(GET_POSTS_BY_DATE_RANGE, config);\n\n  };\n\n  function fetchPosts(url, config) {\n    setLoadingPosts(true);\n    //perform get request with config\n    axios\n      .get(url, config)\n      .then((response) => {\n        //if request successfully gets data them clean and update state\n        console.log(response.data);\n        updatePostsFromResponse(response);\n        setLoadingPosts(false);\n        if (response.status === 204) {\n          message.info(\"No data found\");\n        } else {\n          history.push(\"/posts\");\n        }\n\n      })\n      .catch((err) => {\n        //if we get some error the\n        //if it is error due to token invalidation\n        console.log(err)\n        return\n        if (err.response.status === 401) {\n          //refresh the token\n          refreshAccessToken().then((response) => {\n            //if refresh token is successful\n            //send request again\n            axios\n              .get(url, config)\n              .then(response => {\n                //if data comes successfully then update posts\n                updatePostsFromResponse(response);\n                setLoadingPosts(false);\n                if (response.status === 204) {\n                  message.info(\"No data found\");\n                } else {\n                  history.push(\"/posts\");\n                }\n              }).catch(err => {\n                //if error in second time fetch\n                setLoadingPosts(false);\n                message.error(err.response.statusText);\n              });\n          }).catch(err => {\n            //if there is error with error in fetching token\n            logout();\n          });\n        }\n        // If the error is not because of token\n        console.log(\"Error Reading data \" + err);\n        setLoadingPosts(false);\n      });\n  }\n\n  const fetchDataByROI = () => {\n    if (!searchingCords || searchingCords.length === 0) {\n      message.error(\"Please select any area first...\");\n      return;\n    }\n    const config = {\n      //access token in header for jwt auth\n      headers: getAccessAuthHeader(),\n\n      params: {\n        coordinates: searchingCords[0].map(obj => obj.lat + \",\" + obj.lng).reduce((a, b) => a + \"|\" + b)\n      }\n    };\n    setSearchingCords([]);\n    fetchPosts(GET_POSTS_BY_ROI, config);\n  };\n\n  useEffect(() => {\n    clearAllData();\n  }, []);\n\n  function handleClick() {\n    if (isSearchingByDates()) {\n      console.log(dates, \"ye rhi dates\");\n      // eslint-disable-next-line\n      if (dates[0] == undefined || dates[1] == undefined) {\n        message.error(\"Please select the start and end dates\");\n        return;\n      } else {\n        setDatesInContext(dates);\n        fetchDataByDates();\n      }\n    } else {\n      fetchDataByROI();\n    }\n  }\n\n  function handleSearchByChange(e) {\n    if (e === \"dates\") {\n      toggleSearchToDates();\n    } else if (e === \"roi\") {\n      toggleSearchToROI();\n    }\n  }\n\n  console.log(\"search page rerendring\");\n\n  return (\n    <div className=\"search-container\">\n      <Navbar />\n      <main className=\"main-content-search\">\n        <div className=\"buttons-container\">\n\n          <Select defaultValue=\"dates\" style={{ width: \"30%\", margin: \"10px\" }} onChange={handleSearchByChange}>\n            <Select.Option value=\"dates\">Search By Dates</Select.Option>\n            <Select.Option value=\"roi\">Search By ROI</Select.Option>\n          </Select>\n        </div>\n        {\n\n          isSearchingByDates() ? (\n            <div className=\"calender-and-filters-container\">\n              {\n                loadingPosts ? <Spin className=\"loader\" size=\"large\" tip={\"Fetching posts...\"} /> :\n                  <Calendar setDates={setDates} />\n              }\n            </div>\n          ) : (\n            loadingPosts ? <Spin className=\"loader\" size=\"large\" tip={\"Fetching posts...\"} /> :\n              <ROISearch />\n          )\n        }\n\n        <button onClick={() => {\n          if (!loadingPosts) {\n            handleClick();\n          }\n        }} className=\"search-button\">Search\n        </button>\n      </main>\n    </div>\n  );\n}\n\nexport default Search;\n","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/Signin/Signin.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/Posts/index.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/DataVisualizationSVG/DataVisualizationSVG.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/FileUploader/FileUploader.js",["154"],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/postList/PostList.js",["155"],"import React, { useContext, useEffect } from \"react\";\nimport PostListItem from \"./PostListItem\";\nimport List from \"@material-ui/core/List\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { PostsContext } from \"../../contexts/PostsContext/postContext\";\nimport axios from \"axios\";\nimport { getAccessAuthHeader } from \"../../helpers/localStorage\";\nimport { GET_POST_MARKERS_BY_POST_ID } from \"../../helpers/routes\";\nimport { message } from \"antd\";\nimport { authContext } from \"../../contexts/AuthContext/AuthProvider\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  nested: {\n    paddingLeft: theme.spacing(4)\n  }\n}));\n\nexport default function PostList(props) {\n  const classes = useStyles();\n  const {\n    filteredMarkers,\n    setFilteredMarkers,\n    setMarkerToShow,\n    markers,\n    setCenter,\n    posts,\n    updateMarkersFromResponse,\n    filters,\n    showAll,\n    setShowAll,\n    resetFilteredPosts,\n    populateFilteredPostsWithAll,\n    selectedPostID,\n    setSelectedPostID\n  } = useContext(PostsContext);\n  const { refreshAccessToken, logout } = useContext(authContext);\n\n  function handleMarkerClick(markerID) {\n    console.log(markerID);\n    const marker = filteredMarkers.find((marker) => marker.id === markerID);\n    console.log(marker);\n    setMarkerToShow(marker);\n    setCenter([marker.lat, marker.lon]);\n  }\n\n  useEffect(() => {\n    const fil = markers.filter((marker) => {\n      for (let i = 0; i < marker.classes.length; i++) {\n        if (filters.includes(marker.classes[i])) {\n          return true;\n        }\n      }\n      return false;\n    });\n    setFilteredMarkers(fil);\n  }, [markers, filters, setFilteredMarkers]);\n\n  useEffect(() => {\n    if (showAll) {\n      populateFilteredPostsWithAll();\n    } else {\n      resetFilteredPosts();\n    }\n  }, [showAll]);\n\n  function handlePostsClick(postIDs) {\n    setSelectedPostID(postIDs)\n    const postClicked = posts.find((post) => post.id === postIDs);\n    setCenter(postClicked.completePath[0]);\n    if (postIDs.length === 0) return;\n    if (markers.find((marker) => marker.postID === postIDs)) {\n      return;\n    }\n\n    const idsString = postIDs.toString();\n    const config = {\n      headers: getAccessAuthHeader(),\n\n      params: {\n        post_id: idsString\n      }\n    };\n    const url = GET_POST_MARKERS_BY_POST_ID;\n    axios\n      .get(url, config)\n      .then((response) => {\n        updateMarkersFromResponse(response);\n      })\n      .catch((err) => {\n        if (err.response.status === 401) {\n          //refresh the token\n          refreshAccessToken().then((response) => {\n            //if refresh token is successful\n            const config = {\n              headers: getAccessAuthHeader(),\n\n              params: {\n                post_id: idsString\n              }\n            };\n            //send request again\n            axios\n              .get(url, config)\n              .then(response => {\n                //if data comes successfully then update posts\n                updateMarkersFromResponse(response);\n              }).catch(err => {\n                //if error in second time fetch\n                message.error(err.response.statusText);\n              });\n          }).catch(err => {\n            //if there is error with error in fetching token\n            logout();\n          });\n        }\n        console.log(\"Error Reading data \" + err);\n      });\n  }\n\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      subheader={\n        <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n          <div>\n            <p>Posts</p>\n            <div style={{\n              display: \"flex\",\n              textAlign: \"center\"\n            }}>\n              <Checkbox checked={showAll} value={\"Show All\"} onChange={() => setShowAll(!showAll)} />\n              <p>Show all</p>\n            </div>\n            <hr />\n          </div>\n        </ListSubheader>\n      }\n      className={classes.root}\n    >\n      {posts.map((post, index) => {\n        var markersOfThisPost = filteredMarkers.filter(\n          (marker) => marker.postID === post.id\n        );\n        return (\n          <PostListItem\n            postTitle={post.title}\n            postID={post.id}\n            markers={markersOfThisPost}\n            onMarkerClick={handleMarkerClick}\n            onPostItemClick={handlePostsClick}\n            innerKey={post.key}\n            key={index}\n            selected={post.id===selectedPostID}\n          />\n        );\n      })}\n    </List>\n  );\n}\n",["156","157"],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/SigninForm/SigninForm.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/PasswordResetModal/index.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/User/User.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/settings.js",["158"],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/contexts/PostsContext/postContext.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/Admin/Admin.js",[],["159","160"],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/PostsPage/PostMapPage.js",["161","162","163","164","165"],"//react stuff\nimport React, { useEffect, useContext, useState } from \"react\";\nimport \"leaflet/dist/leaflet.css\";\n//for showing maps\nimport {\n  MapContainer,\n  TileLayer,\n  Marker,\n  Popup,\n  Polyline,\n  useMap\n} from \"react-leaflet-3\";\n//pages own css\nimport \"./postMapPage.css\";\n//for showing marker currently\nimport L from \"leaflet\";\n//class filters side component\nimport ClassFiltersList from \"../../components/classFiltersList/ClassFiltersList\";\n//context for the whole page\nimport {\n  PostsContext, POTHOLES,\n  CRACKS,\n  BLEEDS\n} from \"../../contexts/PostsContext/postContext\";\n//to get random options for post path vector\nimport { getRandomColorOptions } from \"../../helpers/postsHandlingUtils\";\n//side list component for showing post lists\nimport PostList from \"../../components/postList/PostList\";\n//urls on which requests will be sent\nimport { GET_POSTS_BY_DATE_RANGE, BASE, GET_POST_MARKERS_BY_POST_IDS } from \"../../helpers/routes\";\n//marker icons for map\nimport icon from \"leaflet/dist/images/marker-icon.png\";\nimport iconShadow from \"leaflet/dist/images/marker-shadow.png\";\n//auth context for whole application\nimport { authContext } from \"../../contexts/AuthContext/AuthProvider\";\n//side menu for page\nimport Navbar from \"../../components/Navbar/Navbar\";\nimport { storages, BACKEND_STATIC_STORAGE } from \"../../settings\";\nimport { Button, Modal } from \"antd\";\nimport axios from \"axios\";\nimport { getAccessAuthHeader } from \"../../helpers/localStorage\";\nimport {\n  PDFDownloadLink\n} from \"@react-pdf/renderer\";\n\nimport ReportPDF from \"../../components/ReportPDF/ReportPDF\";\n//-----setting marker icon settings and stuff------\nlet DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow,\n  iconAnchor: [12, 41]\n});\n\n\nL.Marker.prototype.options.icon = DefaultIcon;\n\n//-------------------------------------------------\n\nfunction PostMapPage() {\n  //stuff imported from page context that will be used here\n  const {\n    filteredPosts//these posts will be rendered on map\n    , center//center for the whole map\n    , markerToShow//the only marker that will be shown at a time\n    , setCenter,\n    posts,\n    setSelectedPostID,\n    filters\n  } = useContext(\n    PostsContext\n  );\n\n  const [generatingReps, setGeneratingReps] = useState(false);\n\n  function ReportModel(reportData) {\n    setGeneratingReps(false);\n\n\n    Modal.success({\n      title: \"Report Has been successfully generated\",\n      content: (\n        <PDFDownloadLink\n          document={<ReportPDF reportData={reportData} />}\n          fileName={\"report\" + new Date().getTime() + \".pdf\"}\n        >\n          {({ blob, url, loading, error }) =>\n            loading ? \"Loading . . .\" : \"Download\"\n          }\n        </PDFDownloadLink>\n      ),\n      onOk() {\n      }\n    });\n  }\n\n  function getAndGenReportData() {\n    setGeneratingReps(true);\n    const idsAndTitles = filteredPosts.map(e => [e.id, e.title]);\n    const ids = idsAndTitles.map(e => e[0]);\n    axios.get(GET_POST_MARKERS_BY_POST_IDS(ids), {\n      headers: getAccessAuthHeader()\n    }).then(res => {\n      let allMarkers = res.data;\n      let fil = allMarkers.filter(e => {\n        let classes = e.marker_classes.split(\"and\").map(e => e.trim());\n        for (let i = 0; i < classes.length; i++) {\n          if (filters.includes(classes[i])) return true;\n        }\n        return false;\n\n      });\n\n      //this is report data\n      let _reportData = [];\n      idsAndTitles.forEach(idAndTitle => {\n        const markersOfCurrentPost = fil.filter(e => e.post == idAndTitle[0]);\n        console.log(markersOfCurrentPost);\n        const totalMarkers = markersOfCurrentPost.length;\n        const onlyPotholes = markersOfCurrentPost.filter(m => m.marker_classes.trim().toLowerCase() === POTHOLES).length;\n        const onlyCracks = markersOfCurrentPost.filter(m => m.marker_classes.trim().toLowerCase() === CRACKS).length;\n        const onlyBleeds = markersOfCurrentPost.filter(m => m.marker_classes.trim() === BLEEDS).length;\n        const potholesAndCracks = markersOfCurrentPost.filter(m => m.marker_classes.replace(/\\s/g, \"\").toLowerCase() === POTHOLES + \"and\" + CRACKS).length;\n        const potholesAndBleeds = markersOfCurrentPost.filter(m => m.marker_classes.trim().replace(/\\s/g, \"\").toLowerCase() === POTHOLES + \"and\" + BLEEDS).length;\n        const cracksAndBleeds = markersOfCurrentPost.filter(m => m.marker_classes.trim().replace(/\\s/g, \"\").toLowerCase() === CRACKS + \"and\" + BLEEDS).length;\n        _reportData.push({\n          postTitle: idAndTitle[1],\n          totalMarkers: totalMarkers,\n          onlyPotholes: onlyPotholes,\n          onlyCracks: onlyCracks,\n          onlyBleeds: onlyBleeds,\n          potholesAndCracks: potholesAndCracks,\n          potholesAndBleeds: potholesAndBleeds,\n          cracksAndBleeds: cracksAndBleeds\n        });\n\n      });\n      console.log(\"reppppp\", _reportData);\n\n      ReportModel(_reportData);\n\n    });\n  }\n\n\n  /**\n   * invisible component inside map to move maps visible area\n   * @param center- new center for map\n   * @param zoom- new zoom level for map\n   */\n  function ChangeView({ center, zoom }) {\n    const map = useMap();\n    map.setView(center, zoom);\n    return null;\n  }\n\n  /**\n   * Marker component to be rendered on map\n   * @param props- contains marker object\n   * @returns {JSX.Element}\n   */\n  function CustomMarker(props) {\n    return (\n      <Marker\n        position={[props.marker.lat, props.marker.lon]}\n        key={props.marker.id}\n      >\n        <Popup>\n          {\n            BACKEND_STATIC_STORAGE == storages.LOCAL_FS ? (\n              <img\n                src={BASE + props.marker.imagePath.substring(1)}\n                width={200}\n                height={200}\n                alt=\"\"\n              />\n            ) : (\n              <img\n                src={props.marker.imagePath}\n                width={200}\n                height={200}\n                alt=\"\"\n              />\n            )\n          }\n\n        </Popup>\n      </Marker>\n    );\n  }\n\n  useEffect(() => {\n    posts?.map(p => setCenter(p.completePath[0]));\n  }, [posts]);\n\n  function handleVectorClick(postid) {\n    setSelectedPostID(postid);\n  }\n\n  return (\n    <div className=\"posts-container\">\n      <Navbar />\n      <div className=\"map-container-mine\">\n        <MapContainer\n          center={center}\n          zoom={25}\n          scrollWheelZoom={true}\n          style={{ height: \"100vh\" }}\n        >\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          <ChangeView center={center} zoom={25} scrollWheelZoom={false} />\n          {filteredPosts.map((post) => (\n            <Polyline\n              pathOptions={getRandomColorOptions()}\n              positions={post.completePath}\n              key={post.id}\n              eventHandlers={{\n                click: () => {\n                  handleVectorClick(post.id);\n                }\n              }}\n            />\n          ))}\n          {markerToShow !== null ? (\n            <CustomMarker marker={markerToShow} center={center} zoom={25} />\n          ) : null}\n        </MapContainer>\n      </div>\n      <div className=\"side-lists\">\n\n        <div style={{ textAlign: \"center\" }}>\n          <Button type=\"primary\" onClick={getAndGenReportData} loading={generatingReps}>\n            {\n              generatingReps ? \"loading\" : \"Get Report\"\n            } </Button>\n        </div>\n\n\n        <ClassFiltersList />\n        <PostList />\n      </div>\n    </div>\n  );\n}\n\nexport default PostMapPage;\n","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/helpers/formValidation.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/SignupForm/SignupForm.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/UserDetails/UserDetails.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/helpers/calendar.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/postList/PostListItem.js",["166"],"import React, { useContext, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport RoomOutlinedIcon from \"@material-ui/icons/RoomOutlined\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { PostsContext } from \"../../contexts/PostsContext/postContext\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  nested: {\n    paddingLeft: theme.spacing(4)\n  }\n}));\n\nexport default function PostListItem(props) {\n  const {\n    removePostFromFilteredPosts,\n    importPostFromFilteredPosts,\n    showAll,\n    setSelectedPostID\n  } = useContext(PostsContext);\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState(showAll);\n\n\n  const handleClick = () => {\n    console.log(\"handle click called\");\n    if (!checked) {\n      return;\n    } else {\n      props.onPostItemClick(props.postID, checked);\n    }\n\n  };\n\n  const handleCheckChange = () => {\n\n    if(checked){\n      setSelectedPostID(-1)\n      removePostFromFilteredPosts(props.postID)\n    }else{\n      setSelectedPostID(props.postID)\n      importPostFromFilteredPosts(props.postID)\n    }\n    setChecked(!checked);\n  };\n\n\n  useEffect(()=>{\n    setChecked(showAll)\n    setSelectedPostID(-1)\n  },[showAll])\n\n  return (\n    <div>\n      <ListItem button key={props.innerKey} selected={props.selected} autoFocus={props.selected}>\n        <ListItemIcon>\n          <Checkbox\n            edge=\"start\"\n            checked={checked}\n            tabIndex={-1}\n            disableRipple\n            inputProps={{ \"aria-labelledby\": props.postID }}\n            onChange={handleCheckChange}\n          />\n        </ListItemIcon>\n        <ListItemText primary={props.postTitle} id={props.postID} onClick={handleClick} />\n        {(props.selected) ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={(props.selected)} timeout=\"auto\" unmountOnExit>\n        {props.markers ? (\n          <List component=\"div\" disablePadding>\n            {props.markers.map((marker) => (\n              <ListItem\n                button\n                className={classes.nested}\n                onClick={() => props.onMarkerClick(marker.id)}\n                key={marker.id}\n              >\n                <ListItemIcon>\n                  <RoomOutlinedIcon />\n                </ListItemIcon>\n                <ListItemText\n                  primary={\n                    \"Post ID: \" +\n                    marker.postID +\n                    \" | Classes :\" +\n                    marker.classes\n                  }\n                />\n              </ListItem>\n            ))}\n          </List>\n        ) : null}\n      </Collapse>\n    </div>\n  );\n}\n","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/Home/Home.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/RscaLogo/RscaLogo.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/Inputbox/Inputbox.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/hooks/useFormData.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/Navbar/Navbar.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/classFiltersList/ClassFiltersList.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/Date/Date.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/ReportPDF/ReportPDF.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/ROISearch/ROISearch.js",["167","168"],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/Footer/Footer.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/UsersList/UsersList.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/Signup/Signup.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/Calendar/Calendar.js",[],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":2,"column":25,"nodeType":"175","messageId":"176","endLine":2,"endColumn":29},{"ruleId":"169","replacedBy":"177"},{"ruleId":"171","replacedBy":"178"},{"ruleId":"173","severity":1,"message":"179","line":19,"column":107,"nodeType":"175","messageId":"176","endLine":19,"endColumn":121},{"ruleId":"180","severity":1,"message":"181","line":115,"column":6,"nodeType":"182","endLine":115,"endColumn":8,"suggestions":"183"},{"ruleId":"173","severity":1,"message":"184","line":56,"column":19,"nodeType":"175","messageId":"176","endLine":56,"endColumn":24},{"ruleId":"180","severity":1,"message":"185","line":71,"column":6,"nodeType":"182","endLine":71,"endColumn":15,"suggestions":"186"},{"ruleId":"169","replacedBy":"187"},{"ruleId":"171","replacedBy":"188"},{"ruleId":"173","severity":1,"message":"189","line":1,"column":10,"nodeType":"175","messageId":"176","endLine":1,"endColumn":14},{"ruleId":"169","replacedBy":"190"},{"ruleId":"171","replacedBy":"191"},{"ruleId":"173","severity":1,"message":"192","line":30,"column":10,"nodeType":"175","messageId":"176","endLine":30,"endColumn":33},{"ruleId":"173","severity":1,"message":"193","line":35,"column":10,"nodeType":"175","messageId":"176","endLine":35,"endColumn":21},{"ruleId":"194","severity":1,"message":"195","line":116,"column":61,"nodeType":"196","messageId":"197","endLine":116,"endColumn":63},{"ruleId":"194","severity":1,"message":"195","line":169,"column":36,"nodeType":"196","messageId":"197","endLine":169,"endColumn":38},{"ruleId":"180","severity":1,"message":"198","line":193,"column":6,"nodeType":"182","endLine":193,"endColumn":13,"suggestions":"199"},{"ruleId":"180","severity":1,"message":"200","line":63,"column":5,"nodeType":"182","endLine":63,"endColumn":14,"suggestions":"201"},{"ruleId":"173","severity":1,"message":"202","line":1,"column":40,"nodeType":"175","messageId":"176","endLine":1,"endColumn":50},{"ruleId":"173","severity":1,"message":"203","line":7,"column":10,"nodeType":"175","messageId":"176","endLine":7,"endColumn":16},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar",["204"],["205"],"'datesInContext' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'clearAllData'. Either include it or remove the dependency array.","ArrayExpression",["206"],"'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'populateFilteredPostsWithAll' and 'resetFilteredPosts'. Either include them or remove the dependency array.",["207"],["204"],["205"],"'BASE' is defined but never used.",["204"],["205"],"'GET_POSTS_BY_DATE_RANGE' is defined but never used.","'authContext' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'setCenter'. Either include it or remove the dependency array.",["208"],"React Hook useEffect has a missing dependency: 'setSelectedPostID'. Either include it or remove the dependency array.",["209"],"'MapControl' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},"Update the dependencies array to be: [clearAllData]",{"range":"218","text":"219"},"Update the dependencies array to be: [populateFilteredPostsWithAll, resetFilteredPosts, showAll]",{"range":"220","text":"221"},"Update the dependencies array to be: [posts, setCenter]",{"range":"222","text":"223"},"Update the dependencies array to be: [setSelectedPostID, showAll]",{"range":"224","text":"225"},[3934,3936],"[clearAllData]",[1999,2008],"[populateFilteredPostsWithAll, resetFilteredPosts, showAll]",[6052,6059],"[posts, setCenter]",[1676,1685],"[setSelectedPostID, showAll]"]