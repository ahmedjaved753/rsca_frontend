[{"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/Search/Search.js":"1","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/ROISearch/ROISearch.js":"2","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/contexts/AuthContext/AuthProvider.js":"3","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/Signup/Signup.js":"4","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/PostsPage/PostMapPage.js":"5","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/helpers/routes.js":"6","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/helpers/formValidation.js":"7","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/RscaLogo/RscaLogo.js":"8","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/SignupForm/SignupForm.js":"9","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/Inputbox/Inputbox.js":"10","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/UsersList/UsersList.js":"11","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/helpers/calendar.js":"12","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/User/User.js":"13","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/postList/PostListItem.js":"14","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/settings.js":"15"},{"size":5664,"mtime":1616072059901,"results":"16","hashOfConfig":"17"},{"size":2579,"mtime":1616072059900,"results":"18","hashOfConfig":"17"},{"size":3360,"mtime":1610995228259,"results":"19","hashOfConfig":"17"},{"size":522,"mtime":1610633928589,"results":"20","hashOfConfig":"17"},{"size":4308,"mtime":1616164297426,"results":"21","hashOfConfig":"17"},{"size":770,"mtime":1616164711723,"results":"22","hashOfConfig":"17"},{"size":875,"mtime":1610633928584,"results":"23","hashOfConfig":"17"},{"size":270,"mtime":1610633928576,"results":"24","hashOfConfig":"17"},{"size":3687,"mtime":1610995228254,"results":"25","hashOfConfig":"17"},{"size":916,"mtime":1610633928574,"results":"26","hashOfConfig":"17"},{"size":1045,"mtime":1613385719163,"results":"27","hashOfConfig":"17"},{"size":87,"mtime":1610633928583,"results":"28","hashOfConfig":"17"},{"size":265,"mtime":1610633928579,"results":"29","hashOfConfig":"17"},{"size":3110,"mtime":1611065107146,"results":"30","hashOfConfig":"17"},{"size":258,"mtime":1616164610487,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"1fm48t8",{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/Search/Search.js",["64","65","66"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { message, Spin } from \"antd\";\nimport Calendar from \"../../components/Calendar/Calendar\";\nimport Navbar from \"../../components/Navbar/Navbar\";\nimport { PostsContext } from \"../../contexts/PostsContext/postContext\";\nimport { Select } from \"antd\";\nimport ROISearch from \"../ROISearch/ROISearch\";\nimport \"./search.css\";\nimport { getAccessAuthHeader } from \"../../helpers/localStorage\";\nimport { GET_POSTS_BY_DATE_RANGE, GET_POSTS_BY_ROI } from \"../../helpers/routes\";\nimport axios from \"axios\";\nimport { authContext } from \"../../contexts/AuthContext/AuthProvider\";\n\nfunction Search() {\n\n  const [dates, setDates] = useState([]);\n  const [loadingPosts, setLoadingPosts] = useState(false);\n  const { setDates: setDatesInContext, isSearchingByDates, toggleSearchToDates, toggleSearchToROI, dates: datesInContext, updatePostsFromResponse, clearAllData, searchingCords, setSearchingCords } = useContext(PostsContext);\n  const history = useHistory();\n\n  //auth stuff imported from auth context\n  const {\n    refreshAccessToken //function to refresh access token if it expires {returns promise}\n    , logout // function to logout if something happens in auth process\n  } = useContext(authContext);\n\n  const fetchDataByDates = () => {\n    //configuration for get request\n    const config = {\n      //access token in header for jwt auth\n      headers: getAccessAuthHeader(),\n      //start date and end date as url get patterns\n      params: {\n        start_date: dates[0],\n        end_date: dates[1]\n      }\n    };\n    fetchPosts(GET_POSTS_BY_DATE_RANGE, config);\n\n  };\n\n  function fetchPosts(url, config) {\n    setLoadingPosts(true);\n    //perform get request with config\n    axios\n      .get(url, config)\n      .then((response) => {\n        //if request successfully gets data them clean and update state\n        console.log(response.data);\n        updatePostsFromResponse(response);\n        setLoadingPosts(false);\n        if (response.status === 204) {\n          message.info(\"No data found\");\n        } else {\n          history.push(\"/posts\");\n        }\n\n      })\n      .catch((err) => {\n        //if we get some error the\n        //if it is error due to token invalidation\n        if (err.response.status === 401) {\n          //refresh the token\n          refreshAccessToken().then((response) => {\n            //if refresh token is successful\n            //send request again\n            axios\n              .get(url, config)\n              .then(response => {\n                //if data comes successfully then update posts\n                updatePostsFromResponse(response);\n                setLoadingPosts(false);\n                if (response.status === 204) {\n                  message.info(\"No data found\");\n                } else {\n                  history.push(\"/posts\");\n                }\n              }).catch(err => {\n                //if error in second time fetch\n                setLoadingPosts(false);\n                message.error(err.response.statusText);\n              });\n          }).catch(err => {\n            //if there is error with error in fetching token\n            logout();\n          });\n        }\n        // If the error is not because of token\n        console.log(\"Error Reading data \" + err);\n        setLoadingPosts(false);\n      });\n  }\n\n  const fetchDataByROI = () => {\n    if (!searchingCords || searchingCords.length === 0) {\n      message.error(\"Please select any area first...\");\n      return;\n    }\n    const config = {\n      //access token in header for jwt auth\n      headers: getAccessAuthHeader(),\n\n      params: {\n        coordinates: searchingCords[0].map(obj => obj.lat + \",\" + obj.lng).reduce((a, b) => a + \"|\" + b)\n      }\n    };\n    setSearchingCords([]);\n    fetchPosts(GET_POSTS_BY_ROI, config);\n  };\n\n  useEffect(() => {\n    clearAllData();\n  }, []);\n\n  function handleClick() {\n    if (isSearchingByDates()) {\n      console.log(dates, \"ye rhi dates\");\n      // eslint-disable-next-line\n      if (dates[0] == undefined || dates[1] == undefined) {\n        message.error(\"Please select the start and end dates\");\n        return;\n      } else {\n        setDatesInContext(dates);\n        fetchDataByDates();\n      }\n    } else {\n      fetchDataByROI();\n    }\n  }\n\n  function handleSearchByChange(e) {\n    if (e === \"dates\") {\n      toggleSearchToDates();\n    } else if (e === \"roi\") {\n      toggleSearchToROI();\n    }\n  }\n\n  console.log(\"search page rerendring\");\n\n  return (\n    <div className=\"search-container\">\n      <Navbar />\n      <main className=\"main-content-search\">\n        <div className=\"buttons-container\">\n\n          <Select defaultValue=\"dates\" style={{ width: \"30%\", margin: \"10px\" }} onChange={handleSearchByChange}>\n            <Select.Option value=\"dates\">Search By Dates</Select.Option>\n            <Select.Option value=\"roi\">Search By ROI</Select.Option>\n          </Select>\n        </div>\n        {\n\n          isSearchingByDates() ? (\n            <div className=\"calender-and-filters-container\">\n              {\n                loadingPosts ? <Spin className=\"loader\" size=\"large\" tip={\"Fetching posts...\"} /> :\n                  <Calendar setDates={setDates} />\n              }\n            </div>\n          ) : (\n            loadingPosts ? <Spin className=\"loader\" size=\"large\" tip={\"Fetching posts...\"} /> :\n              <ROISearch />\n          )\n        }\n\n        <button onClick={() => {\n          if (!loadingPosts) {\n            handleClick();\n          }\n        }} className=\"search-button\">Search\n        </button>\n      </main>\n    </div>\n  );\n}\n\nexport default Search;\n",["67","68"],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/ROISearch/ROISearch.js",["69","70"],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/contexts/AuthContext/AuthProvider.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/Signup/Signup.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/PostsPage/PostMapPage.js",["71","72","73","74"],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/helpers/routes.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/helpers/formValidation.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/RscaLogo/RscaLogo.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/SignupForm/SignupForm.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/Inputbox/Inputbox.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/UsersList/UsersList.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/helpers/calendar.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/User/User.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/postList/PostListItem.js",["75"],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/settings.js",[],{"ruleId":"76","severity":1,"message":"77","line":15,"column":7,"nodeType":"78","messageId":"79","endLine":15,"endColumn":13},{"ruleId":"76","severity":1,"message":"80","line":21,"column":107,"nodeType":"78","messageId":"79","endLine":21,"endColumn":121},{"ruleId":"81","severity":1,"message":"82","line":116,"column":6,"nodeType":"83","endLine":116,"endColumn":8,"suggestions":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"76","severity":1,"message":"89","line":1,"column":40,"nodeType":"78","messageId":"79","endLine":1,"endColumn":50},{"ruleId":"76","severity":1,"message":"90","line":7,"column":10,"nodeType":"78","messageId":"79","endLine":7,"endColumn":16},{"ruleId":"76","severity":1,"message":"91","line":26,"column":10,"nodeType":"78","messageId":"79","endLine":26,"endColumn":33},{"ruleId":"76","severity":1,"message":"92","line":31,"column":10,"nodeType":"78","messageId":"79","endLine":31,"endColumn":21},{"ruleId":"93","severity":1,"message":"94","line":85,"column":36,"nodeType":"95","messageId":"96","endLine":85,"endColumn":38},{"ruleId":"81","severity":1,"message":"97","line":109,"column":6,"nodeType":"83","endLine":109,"endColumn":13,"suggestions":"98"},{"ruleId":"81","severity":1,"message":"99","line":63,"column":5,"nodeType":"83","endLine":63,"endColumn":14,"suggestions":"100"},"no-unused-vars","'Option' is assigned a value but never used.","Identifier","unusedVar","'datesInContext' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'clearAllData'. Either include it or remove the dependency array.","ArrayExpression",["101"],"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"'MapControl' is defined but never used.","'Button' is defined but never used.","'GET_POSTS_BY_DATE_RANGE' is defined but never used.","'authContext' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'setCenter'. Either include it or remove the dependency array.",["104"],"React Hook useEffect has a missing dependency: 'setSelectedPostID'. Either include it or remove the dependency array.",["105"],{"desc":"106","fix":"107"},"no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [clearAllData]",{"range":"112","text":"113"},"Update the dependencies array to be: [posts, setCenter]",{"range":"114","text":"115"},"Update the dependencies array to be: [setSelectedPostID, showAll]",{"range":"116","text":"117"},[3929,3931],"[clearAllData]",[3012,3019],"[posts, setCenter]",[1676,1685],"[setSelectedPostID, showAll]"]