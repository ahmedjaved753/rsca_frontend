[{"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/postList/PostList.js":"1","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/contexts/AuthContext/AuthProvider.js":"2","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/Signup/Signup.js":"3","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/Search/Search.js":"4","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/helpers/localStorage.js":"5","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/hooks/useFormData.js":"6","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/Inputbox/Inputbox.js":"7","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/UsersList/UsersList.js":"8","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/Menu/Menu.js":"9","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/classFiltersList/ClassFiltersList.js":"10","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/helpers/calendar.js":"11","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/Date/Date.js":"12","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/Home/Home.js":"13","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/helpers/postsHandlingUtils.js":"14","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/PostsPage/PostMapPage.js":"15","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/App.js":"16","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/ROISearch/ROISearch.js":"17","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/index.js":"18","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/contexts/PostsContext/postContext.js":"19","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/Admin/Admin.js":"20","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/helpers/routes.js":"21","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/SigninForm/SigninForm.js":"22","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/Footer/Footer.js":"23","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/UserDetails/UserDetails.js":"24","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/NavigationIcon/NavigationIcon.js":"25","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/FileUploader/FileUploader.js":"26","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/DataVisualizationSVG/DataVisualizationSVG.js":"27","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/RscaLogo/RscaLogo.js":"28","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/SignupForm/SignupForm.js":"29","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/User/User.js":"30"},{"size":4709,"mtime":1611065107139,"results":"31","hashOfConfig":"32"},{"size":3360,"mtime":1610995228259,"results":"33","hashOfConfig":"34"},{"size":522,"mtime":1610633928589,"results":"35","hashOfConfig":"32"},{"size":1348,"mtime":1610973962621,"results":"36","hashOfConfig":"32"},{"size":731,"mtime":1610633928584,"results":"37","hashOfConfig":"32"},{"size":399,"mtime":1610633928585,"results":"38","hashOfConfig":"32"},{"size":916,"mtime":1610633928574,"results":"39","hashOfConfig":"32"},{"size":936,"mtime":1610633928580,"results":"40","hashOfConfig":"32"},{"size":1158,"mtime":1610991398450,"results":"41","hashOfConfig":"32"},{"size":2445,"mtime":1610634725889,"results":"42","hashOfConfig":"32"},{"size":87,"mtime":1610633928583,"results":"43","hashOfConfig":"32"},{"size":1050,"mtime":1610973962619,"results":"44","hashOfConfig":"32"},{"size":438,"mtime":1612865084705,"results":"45","hashOfConfig":"32"},{"size":3221,"mtime":1612785428451,"results":"46","hashOfConfig":"34"},{"size":6627,"mtime":1612867046768,"results":"47","hashOfConfig":"32"},{"size":1966,"mtime":1612865600731,"results":"48","hashOfConfig":"32"},{"size":2512,"mtime":1612868982410,"results":"49","hashOfConfig":"32"},{"size":423,"mtime":1610633928586,"results":"50","hashOfConfig":"32"},{"size":4348,"mtime":1611065107148,"results":"51","hashOfConfig":"32"},{"size":6137,"mtime":1610995228264,"results":"52","hashOfConfig":"32"},{"size":714,"mtime":1610995228281,"results":"53","hashOfConfig":"32"},{"size":2333,"mtime":1610995228254,"results":"54","hashOfConfig":"32"},{"size":297,"mtime":1610633928573,"results":"55","hashOfConfig":"32"},{"size":3834,"mtime":1610995228255,"results":"56","hashOfConfig":"32"},{"size":883,"mtime":1610995228253,"results":"57","hashOfConfig":"32"},{"size":3690,"mtime":1610995228252,"results":"58","hashOfConfig":"32"},{"size":310,"mtime":1610633928571,"results":"59","hashOfConfig":"32"},{"size":270,"mtime":1610633928576,"results":"60","hashOfConfig":"32"},{"size":3687,"mtime":1610995228254,"results":"61","hashOfConfig":"32"},{"size":265,"mtime":1610633928579,"results":"62","hashOfConfig":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},"1fm48t8",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nc7mv3",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"75"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"75"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/postList/PostList.js",["132"],"import React, { useContext, useEffect } from \"react\";\nimport PostListItem from \"./PostListItem\";\nimport List from \"@material-ui/core/List\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { PostsContext } from \"../../contexts/PostsContext/postContext\";\nimport axios from \"axios\";\nimport { getAccessAuthHeader } from \"../../helpers/localStorage\";\nimport { GET_POST_MARKERS_BY_POST_ID } from \"../../helpers/routes\";\nimport { message } from \"antd\";\nimport { authContext } from \"../../contexts/AuthContext/AuthProvider\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  nested: {\n    paddingLeft: theme.spacing(4)\n  }\n}));\n\nexport default function PostList(props) {\n  const classes = useStyles();\n  const {\n    filteredMarkers,\n    setFilteredMarkers,\n    setMarkerToShow,\n    markers,\n    setCenter,\n    posts,\n    updateMarkersFromResponse,\n    filters,\n    showAll,\n    setShowAll,\n    resetFilteredPosts,\n    populateFilteredPostsWithAll,\n    selectedPostID,\n    setSelectedPostID\n  } = useContext(PostsContext);\n  const { refreshAccessToken, logout } = useContext(authContext);\n\n  function handleMarkerClick(markerID) {\n    console.log(markerID);\n    const marker = filteredMarkers.find((marker) => marker.id === markerID);\n    console.log(marker);\n    setMarkerToShow(marker);\n    setCenter([marker.lat, marker.lon]);\n  }\n\n  useEffect(() => {\n    const fil = markers.filter((marker) => {\n      for (let i = 0; i < marker.classes.length; i++) {\n        if (filters.includes(marker.classes[i])) {\n          return true;\n        }\n      }\n      return false;\n    });\n    setFilteredMarkers(fil);\n  }, [markers, filters, setFilteredMarkers]);\n\n  useEffect(() => {\n    if (showAll) {\n      populateFilteredPostsWithAll();\n    } else {\n      resetFilteredPosts();\n    }\n  }, [showAll]);\n\n  function handlePostsClick(postIDs) {\n    setSelectedPostID(postIDs)\n    const postClicked = posts.find((post) => post.id === postIDs);\n    setCenter(postClicked.completePath[0]);\n    if (postIDs.length === 0) return;\n    if (markers.find((marker) => marker.postID === postIDs)) {\n      return;\n    }\n\n    const idsString = postIDs.toString();\n    const config = {\n      headers: getAccessAuthHeader(),\n\n      params: {\n        post_id: idsString\n      }\n    };\n    const url = GET_POST_MARKERS_BY_POST_ID;\n    axios\n      .get(url, config)\n      .then((response) => {\n        updateMarkersFromResponse(response);\n      })\n      .catch((err) => {\n        if (err.response.status === 401) {\n          //refresh the token\n          refreshAccessToken().then((response) => {\n            //if refresh token is successful\n            const config = {\n              headers: getAccessAuthHeader(),\n\n              params: {\n                post_id: idsString\n              }\n            };\n            //send request again\n            axios\n              .get(url, config)\n              .then(response => {\n                //if data comes successfully then update posts\n                updateMarkersFromResponse(response);\n              }).catch(err => {\n                //if error in second time fetch\n                message.error(err.response.statusText);\n              });\n          }).catch(err => {\n            //if there is error with error in fetching token\n            logout();\n          });\n        }\n        console.log(\"Error Reading data \" + err);\n      });\n  }\n\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      subheader={\n        <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n          <div>\n            <p>Posts</p>\n            <div style={{\n              display: \"flex\",\n              textAlign: \"center\"\n            }}>\n              <Checkbox checked={showAll} value={\"Show All\"} onChange={() => setShowAll(!showAll)} />\n              <p>Show all</p>\n            </div>\n            <hr />\n          </div>\n        </ListSubheader>\n      }\n      className={classes.root}\n    >\n      {posts.map((post, index) => {\n        var markersOfThisPost = filteredMarkers.filter(\n          (marker) => marker.postID === post.id\n        );\n        return (\n          <PostListItem\n            postTitle={post.title}\n            postID={post.id}\n            markers={markersOfThisPost}\n            onMarkerClick={handleMarkerClick}\n            onPostItemClick={handlePostsClick}\n            innerKey={post.key}\n            key={index}\n            selected={post.id===selectedPostID}\n          />\n        );\n      })}\n    </List>\n  );\n}\n",["133","134"],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/contexts/AuthContext/AuthProvider.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/Signup/Signup.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/Search/Search.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/helpers/localStorage.js",[],["135","136"],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/hooks/useFormData.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/Inputbox/Inputbox.js",[],["137","138"],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/UsersList/UsersList.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/Menu/Menu.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/classFiltersList/ClassFiltersList.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/helpers/calendar.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/Date/Date.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/Home/Home.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/helpers/postsHandlingUtils.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/PostsPage/PostMapPage.js",["139","140","141"],"//react stuff\nimport React, { useEffect, useContext } from \"react\";\n//to send requests to server\nimport axios from \"axios\";\n//must be included for maps\nimport \"leaflet/dist/leaflet.css\";\n//for showing maps\nimport {\n  MapContainer,\n  TileLayer,\n  Marker,\n  Popup,\n  Polyline,\n  useMap\n} from \"react-leaflet-3\";\n//pages own css\nimport \"./postMapPage.css\";\n//for showing marker currently\nimport L from \"leaflet\";\n//class filters side component\nimport ClassFiltersList from \"../../components/classFiltersList/ClassFiltersList\";\n//context for the whole page\nimport { PostsContext } from \"../../contexts/PostsContext/postContext\";\n//to get random options for post path vector\nimport { getRandomColorOptions } from \"../../helpers/postsHandlingUtils\";\n//side list component for showing post lists\nimport PostList from \"../../components/postList/PostList\";\n//sending request needs access token stored\nimport { getAccessAuthHeader } from \"../../helpers/localStorage\";\n//urls on which requests will be sent\nimport { GET_POSTS_BY_DATE_RANGE, BASE } from \"../../helpers/routes\";\n//marker icons for map\nimport icon from \"leaflet/dist/images/marker-icon.png\";\nimport iconShadow from \"leaflet/dist/images/marker-shadow.png\";\n//auth context for whole application\nimport { authContext } from \"../../contexts/AuthContext/AuthProvider\";\n//to show success or error messages\nimport { message } from \"antd\";\n//side menu for page\nimport Menu from \"../../components/Menu/Menu\";\n\n//-----setting marker icon settings and stuff------\nlet DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow,\n  iconAnchor: [12, 41],\n});\n\nL.Marker.prototype.options.icon = DefaultIcon;\n\n//-------------------------------------------------\n\nfunction PostMapPage() {\n  //stuff imported from page context that will be used here\n  const {\n    filteredPosts//these posts will be rendered on map\n    , center//center for the whole map\n    , markerToShow//the only marker that will be shown at a time\n    , updatePostsFromResponse// function that will parse posts data and update posts state\n    , dates// dates for which posts will be fetched from server.\n    , setCenter,\n    posts,\n    setSelectedPostID\n  } = useContext(\n    PostsContext\n  );\n\n  //auth stuff imported from auth context\n  const {\n    refreshAccessToken //function to refresh access token if it expires {returns promise}\n    , logout // function to logout if something happens in auth process\n  } = useContext(authContext);\n\n  //will be called once the page is loaded with empty data and everytime dependencies changes\n  useEffect(() => {\n    const fetchData = () => {\n      //configuration for get request\n      const config = {\n        //access token in header for jwt auth\n        headers: getAccessAuthHeader(),\n        //start date and end date as url get patterns\n        params: {\n          start_date: dates[0],\n          end_date: dates[1]\n        }\n      };\n      //url for getting posts from urls file\n      const url = GET_POSTS_BY_DATE_RANGE;\n      //perform get request with config\n      axios\n        .get(url, config)\n        .then((response) => {\n          //if request successfully gets data them clean and update state\n          console.log(response.data);\n          updatePostsFromResponse(response);\n        })\n        .catch((err) => {\n          //if we get some error the\n          //if it is error due to token invalidation\n          if (err.response.status === 401) {\n            //refresh the token\n            refreshAccessToken().then((response) => {\n              //if refresh token is successful\n              //perform request again\n              const config = {\n                headers: getAccessAuthHeader(),\n\n                params: {\n                  start_date: dates[0],\n                  end_date: dates[1]\n                }\n              };\n              //send request again\n              axios\n                .get(url, config)\n                .then(response => {\n                  //if data comes successfully then update posts\n                  updatePostsFromResponse(response);\n                }).catch(err => {\n                //if error in second time fetch\n                message.error(err.response.statusText);\n              });\n            }).catch(err => {\n              //if there is error with error in fetching token\n              logout();\n            });\n          }\n          // If the error is not because of token\n          console.log(\"Error Reading data \" + err);\n        });\n    };\n    fetchData();\n  }, [dates]);\n\n  /**\n   * invisible component inside map to move maps visible area\n   * @param center- new center for map\n   * @param zoom- new zoom level for map\n   */\n  function ChangeView({ center, zoom }) {\n    const map = useMap();\n    map.setView(center, zoom);\n    return null;\n  }\n\n  /**\n   * Marker component to be rendered on map\n   * @param props- contains marker object\n   * @returns {JSX.Element}\n   */\n  function CustomMarker(props) {\n    return (\n      <Marker\n        position={[props.marker.lat, props.marker.lon]}\n        key={props.marker.id}\n      >\n        <Popup>\n          <img\n            src={BASE + props.marker.imagePath.substring(1)}\n            width={200}\n            height={200}\n          />\n        </Popup>\n      </Marker>\n    );\n  }\n\n  useEffect(() => {\n    posts?.map(p=>setCenter(p.completePath[0]))\n  }, [posts]);\n\n  function handleVectorClick(postid) {\n    setSelectedPostID(postid)\n  }\n\n  return (\n    <div className=\"posts-container\">\n      <Menu />\n      <div className=\"map-container-mine\">\n        <MapContainer\n          center={center}\n          zoom={25}\n          scrollWheelZoom={true}\n          style={{ height: \"100vh\" }}\n        >\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          <ChangeView center={center} zoom={25} scrollWheelZoom={false} />\n          {filteredPosts.map((post) => (\n            <Polyline\n              pathOptions={getRandomColorOptions()}\n              positions={post.completePath}\n              key={post.id}\n              eventHandlers={{\n                click: () => {\n                  handleVectorClick(post.id);\n                }\n              }}\n            />\n          ))}\n          {markerToShow !== null ? (\n            <CustomMarker marker={markerToShow} center={center} zoom={25} />\n          ) : null}\n        </MapContainer>\n      </div>\n      <div className=\"side-lists\">\n        <ClassFiltersList />\n        <PostList />\n      </div>\n    </div>\n  );\n}\n\nexport default PostMapPage;\n","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/App.js",["142"],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/ROISearch/ROISearch.js",["143","144"],"import { Map, TileLayer, FeatureGroup, MapControl } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport { EditControl } from \"react-leaflet-draw\";\nimport \"leaflet-draw/dist/leaflet.draw.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from \"antd\";\n\nfunction ROISearch() {\n  const [rectCords, setRectCords] = useState({});\n\n  const [editableFG, setEditableFG] = useState(null);\n\n  const onCreated = e => {\n    console.log(e);\n    console.log(editableFG);\n\n    const drawnItems = editableFG.leafletElement._layers;\n    console.log(drawnItems);\n    if (Object.keys(drawnItems).length > 1) {\n      Object.keys(drawnItems).forEach((layerid, index) => {\n        if (index > 0) return;\n        const layer = drawnItems[layerid];\n        editableFG.leafletElement.removeLayer(layer);\n      });\n      console.log(drawnItems);\n    }\n    const data = {\n      type: e.layerType,\n      coordinates: e.layer.getLatLngs()\n    };\n    setRectCords(data);\n  };\n\n  const onFeatureGroupReady = reactFGref => {\n    // store the ref for future access to content\n    setEditableFG(reactFGref);\n  };\n\n  function _created(e) {\n    console.log(e);\n    const data = {\n      type: e.layerType,\n      coordinates: e.layer.getLatLngs()\n    };\n    setRectCords(data);\n\n  }\n\n  useEffect(() => {\n    console.log(rectCords);\n  }, [rectCords]);\n\n  return (\n    <div style={{ display: \"grid\", margin: \"2rem\", gridGap: \".5rem\" }}>\n      <Map\n        center={[31, 74]}\n        zoom={12}\n        scrollWheelZoom={true}\n        style={{ height: \"80vh\" }}\n      >\n        <FeatureGroup\n          ref={featureGroupRef => {\n            onFeatureGroupReady(featureGroupRef);\n          }}>\n          <EditControl position={\"topright\"}\n                       onCreated={onCreated}\n                       draw={{\n                         circle: false,\n                         line: false,\n                         //polygon: false,\n                         marker: false,\n                         polyline: false,\n                         circlemarker: false\n                       }} />\n        </FeatureGroup>\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n      </Map>\n      <div style={{ textAlign: \"center\" }}>\n        <Button type=\"primary\" shape=\"round\" size={\"large\"}>\n          Search\n        </Button>\n      </div>\n    </div>\n\n  );\n}\n\nexport default ROISearch;\n","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/index.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/contexts/PostsContext/postContext.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/Admin/Admin.js",[],["145","146"],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/helpers/routes.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/SigninForm/SigninForm.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/Footer/Footer.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/UserDetails/UserDetails.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/NavigationIcon/NavigationIcon.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/FileUploader/FileUploader.js",["147"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport 'antd/dist/antd.css';\nimport { Upload, Progress, Alert } from \"antd\";\nimport { getAccessToken } from '../../helpers/localStorage'\nimport { UPLOAD_FILE } from '../../helpers/routes'\n\nfunction FileUploader(props) {\n    const [title, setTitle] = useState(\"\");\n    const [titleError, setTitleError] = useState(false);\n    const [initalTitleError, setInitalTitleError] = useState(true);\n\n    const [defaultFileList, setDefaultFileList] = useState([]);\n    const [progress, setProgress] = useState(0);\n\n    const beforeUpload = (file, fileList) => {\n        console.log(\"before upload\");\n        if (title === \"\") {\n            setTitleError(true);\n            return false;\n        }\n        setTitleError(false);\n        return true;\n    };\n    const uploadFile = async (options) => {\n        const { onSuccess, onError, file, onProgress } = options;\n        //this hardcoded stuff should be changed {\n        const accessToken =\n            \"Bearer \" + getAccessToken();\n        const fmData = new FormData();\n        // }\n        const config = {\n            headers: {\n                \"content-type\": \"multipart/form-data\",\n                Authorization: accessToken,\n            },\n            onUploadProgress: (event) => {\n                const percent = Math.floor((event.loaded / event.total) * 100);\n                setProgress(percent);\n                if (percent === 100) {\n                    setTimeout(() => setProgress(0), 1000);\n                }\n                onProgress({ percent: (event.loaded / event.total) * 100 });\n            },\n        };\n        fmData.append(\"data_file\", file);\n        fmData.append(\"title\", title);\n        try {\n            const res = await axios.post(UPLOAD_FILE, fmData, config);\n\n            onSuccess(\"Ok\");\n            console.log(\"server res: \", res);\n        } catch (err) {\n            console.log(\"Eroor: \", err);\n            const error = new Error(\"Some error\");\n            onError({ err });\n        }\n    };\n\n    const handleOnChange = ({ file, fileList, event }) => {\n        setDefaultFileList(fileList);\n    };\n    return (\n        <div>\n            {titleError ? (\n                <Alert\n                    message=\"Error\"\n                    description=\"Title cannot be empty.\"\n                    type=\"error\"\n                    showIcon\n                />\n            ) : null}\n            <h1>New Post</h1>\n            <textarea\n                type=\"text\"\n                placeholder=\"Enter title\"\n                value={title}\n                onChange={(e) => {\n                    setInitalTitleError(false);\n                    if (e.target.value === \"\") {\n                        setTitleError(true);\n                    } else {\n                        setTitleError(false);\n                    }\n                    setTitle(e.target.value);\n                }}\n            />\n\n            <div className=\"container\">\n                <Upload\n                    type=\"file\"\n                    accept=\"file/*,.enc\"\n                    customRequest={uploadFile}\n                    onChange={handleOnChange}\n                    listType=\"picture-card\"\n                    defaultFileList={defaultFileList}\n                    className=\"image-upload-grid\"\n                    disabled={titleError || initalTitleError}\n                    beforeUpload={beforeUpload}\n                >\n                    {defaultFileList.length >= 1 ? null : <div>Upload Button</div>}\n                </Upload>\n                {progress > 0 ? <Progress percent={progress} /> : null}\n            </div>\n        </div>\n    );\n}\n\nexport default FileUploader;","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/DataVisualizationSVG/DataVisualizationSVG.js",[],["148","149"],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/RscaLogo/RscaLogo.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/SignupForm/SignupForm.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/User/User.js",[],{"ruleId":"150","severity":1,"message":"151","line":71,"column":6,"nodeType":"152","endLine":71,"endColumn":15,"suggestions":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"154","replacedBy":"158"},{"ruleId":"156","replacedBy":"159"},{"ruleId":"154","replacedBy":"160"},{"ruleId":"156","replacedBy":"161"},{"ruleId":"150","severity":1,"message":"162","line":133,"column":6,"nodeType":"152","endLine":133,"endColumn":13,"suggestions":"163"},{"ruleId":"164","severity":1,"message":"165","line":158,"column":11,"nodeType":"166","endLine":162,"endColumn":13},{"ruleId":"150","severity":1,"message":"167","line":170,"column":6,"nodeType":"152","endLine":170,"endColumn":13,"suggestions":"168"},{"ruleId":"169","severity":1,"message":"170","line":2,"column":25,"nodeType":"171","messageId":"172","endLine":2,"endColumn":29},{"ruleId":"169","severity":1,"message":"173","line":1,"column":40,"nodeType":"171","messageId":"172","endLine":1,"endColumn":50},{"ruleId":"169","severity":1,"message":"174","line":39,"column":12,"nodeType":"171","messageId":"172","endLine":39,"endColumn":20},{"ruleId":"154","replacedBy":"175"},{"ruleId":"156","replacedBy":"176"},{"ruleId":"169","severity":1,"message":"177","line":55,"column":19,"nodeType":"171","messageId":"172","endLine":55,"endColumn":24},{"ruleId":"154","replacedBy":"178"},{"ruleId":"156","replacedBy":"179"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'populateFilteredPostsWithAll' and 'resetFilteredPosts'. Either include them or remove the dependency array.","ArrayExpression",["180"],"no-native-reassign",["181"],"no-negated-in-lhs",["182"],["181"],["182"],["181"],["182"],"React Hook useEffect has missing dependencies: 'logout', 'refreshAccessToken', and 'updatePostsFromResponse'. Either include them or remove the dependency array.",["183"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'setCenter'. Either include it or remove the dependency array.",["184"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'MapControl' is defined but never used.","'_created' is defined but never used.",["181"],["182"],"'error' is assigned a value but never used.",["181"],["182"],{"desc":"185","fix":"186"},"no-global-assign","no-unsafe-negation",{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},"Update the dependencies array to be: [populateFilteredPostsWithAll, resetFilteredPosts, showAll]",{"range":"191","text":"192"},"Update the dependencies array to be: [dates, logout, refreshAccessToken, updatePostsFromResponse]",{"range":"193","text":"194"},"Update the dependencies array to be: [posts, setCenter]",{"range":"195","text":"196"},[1999,2008],"[populateFilteredPostsWithAll, resetFilteredPosts, showAll]",[4496,4503],"[dates, logout, refreshAccessToken, updatePostsFromResponse]",[5334,5341],"[posts, setCenter]"]