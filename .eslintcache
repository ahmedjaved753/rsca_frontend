[{"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/postList/PostList.js":"1","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/contexts/AuthContext/AuthProvider.js":"2","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/Signup/Signup.js":"3","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/Search/Search.js":"4","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/helpers/localStorage.js":"5","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/hooks/useFormData.js":"6","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/Inputbox/Inputbox.js":"7","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/UsersList/UsersList.js":"8","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/Menu/Menu.js":"9","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/classFiltersList/ClassFiltersList.js":"10","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/helpers/calendar.js":"11","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/Date/Date.js":"12","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/Home/Home.js":"13","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/helpers/postsHandlingUtils.js":"14","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/PostsPage/PostMapPage.js":"15","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/App.js":"16","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/ROISearch/ROISearch.js":"17","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/index.js":"18","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/contexts/PostsContext/postContext.js":"19","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/Admin/Admin.js":"20","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/helpers/routes.js":"21","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/SigninForm/SigninForm.js":"22","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/Footer/Footer.js":"23","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/UserDetails/UserDetails.js":"24","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/NavigationIcon/NavigationIcon.js":"25","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/FileUploader/FileUploader.js":"26","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/DataVisualizationSVG/DataVisualizationSVG.js":"27","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/RscaLogo/RscaLogo.js":"28","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/SignupForm/SignupForm.js":"29","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/User/User.js":"30","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/Calendar/Calendar.js":"31","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/postList/PostListItem.js":"32"},{"size":4709,"mtime":1611065107139,"results":"33","hashOfConfig":"34"},{"size":3360,"mtime":1610995228259,"results":"35","hashOfConfig":"36"},{"size":522,"mtime":1610633928589,"results":"37","hashOfConfig":"34"},{"size":1882,"mtime":1612872600463,"results":"38","hashOfConfig":"34"},{"size":731,"mtime":1610633928584,"results":"39","hashOfConfig":"34"},{"size":399,"mtime":1610633928585,"results":"40","hashOfConfig":"34"},{"size":916,"mtime":1610633928574,"results":"41","hashOfConfig":"34"},{"size":936,"mtime":1610633928580,"results":"42","hashOfConfig":"34"},{"size":1158,"mtime":1610991398450,"results":"43","hashOfConfig":"34"},{"size":2445,"mtime":1610634725889,"results":"44","hashOfConfig":"34"},{"size":87,"mtime":1610633928583,"results":"45","hashOfConfig":"34"},{"size":1050,"mtime":1610973962619,"results":"46","hashOfConfig":"34"},{"size":438,"mtime":1612865084705,"results":"47","hashOfConfig":"34"},{"size":3221,"mtime":1612785428451,"results":"48","hashOfConfig":"36"},{"size":6627,"mtime":1612867046768,"results":"49","hashOfConfig":"34"},{"size":1966,"mtime":1612865600731,"results":"50","hashOfConfig":"34"},{"size":2187,"mtime":1612872922297,"results":"51","hashOfConfig":"34"},{"size":423,"mtime":1610633928586,"results":"52","hashOfConfig":"34"},{"size":4965,"mtime":1612872798080,"results":"53","hashOfConfig":"34"},{"size":6137,"mtime":1610995228264,"results":"54","hashOfConfig":"34"},{"size":714,"mtime":1610995228281,"results":"55","hashOfConfig":"34"},{"size":2333,"mtime":1610995228254,"results":"56","hashOfConfig":"34"},{"size":297,"mtime":1610633928573,"results":"57","hashOfConfig":"34"},{"size":3834,"mtime":1610995228255,"results":"58","hashOfConfig":"34"},{"size":883,"mtime":1610995228253,"results":"59","hashOfConfig":"34"},{"size":3690,"mtime":1610995228252,"results":"60","hashOfConfig":"34"},{"size":310,"mtime":1610633928571,"results":"61","hashOfConfig":"34"},{"size":270,"mtime":1610633928576,"results":"62","hashOfConfig":"34"},{"size":3687,"mtime":1610995228254,"results":"63","hashOfConfig":"34"},{"size":265,"mtime":1610633928579,"results":"64","hashOfConfig":"34"},{"size":8482,"mtime":1610995228249,"results":"65","hashOfConfig":"34"},{"size":3110,"mtime":1611065107146,"results":"66","hashOfConfig":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},"1fm48t8",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nc7mv3",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"79"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"79"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"70"},"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/postList/PostList.js",["140"],"import React, { useContext, useEffect } from \"react\";\nimport PostListItem from \"./PostListItem\";\nimport List from \"@material-ui/core/List\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { PostsContext } from \"../../contexts/PostsContext/postContext\";\nimport axios from \"axios\";\nimport { getAccessAuthHeader } from \"../../helpers/localStorage\";\nimport { GET_POST_MARKERS_BY_POST_ID } from \"../../helpers/routes\";\nimport { message } from \"antd\";\nimport { authContext } from \"../../contexts/AuthContext/AuthProvider\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  nested: {\n    paddingLeft: theme.spacing(4)\n  }\n}));\n\nexport default function PostList(props) {\n  const classes = useStyles();\n  const {\n    filteredMarkers,\n    setFilteredMarkers,\n    setMarkerToShow,\n    markers,\n    setCenter,\n    posts,\n    updateMarkersFromResponse,\n    filters,\n    showAll,\n    setShowAll,\n    resetFilteredPosts,\n    populateFilteredPostsWithAll,\n    selectedPostID,\n    setSelectedPostID\n  } = useContext(PostsContext);\n  const { refreshAccessToken, logout } = useContext(authContext);\n\n  function handleMarkerClick(markerID) {\n    console.log(markerID);\n    const marker = filteredMarkers.find((marker) => marker.id === markerID);\n    console.log(marker);\n    setMarkerToShow(marker);\n    setCenter([marker.lat, marker.lon]);\n  }\n\n  useEffect(() => {\n    const fil = markers.filter((marker) => {\n      for (let i = 0; i < marker.classes.length; i++) {\n        if (filters.includes(marker.classes[i])) {\n          return true;\n        }\n      }\n      return false;\n    });\n    setFilteredMarkers(fil);\n  }, [markers, filters, setFilteredMarkers]);\n\n  useEffect(() => {\n    if (showAll) {\n      populateFilteredPostsWithAll();\n    } else {\n      resetFilteredPosts();\n    }\n  }, [showAll]);\n\n  function handlePostsClick(postIDs) {\n    setSelectedPostID(postIDs)\n    const postClicked = posts.find((post) => post.id === postIDs);\n    setCenter(postClicked.completePath[0]);\n    if (postIDs.length === 0) return;\n    if (markers.find((marker) => marker.postID === postIDs)) {\n      return;\n    }\n\n    const idsString = postIDs.toString();\n    const config = {\n      headers: getAccessAuthHeader(),\n\n      params: {\n        post_id: idsString\n      }\n    };\n    const url = GET_POST_MARKERS_BY_POST_ID;\n    axios\n      .get(url, config)\n      .then((response) => {\n        updateMarkersFromResponse(response);\n      })\n      .catch((err) => {\n        if (err.response.status === 401) {\n          //refresh the token\n          refreshAccessToken().then((response) => {\n            //if refresh token is successful\n            const config = {\n              headers: getAccessAuthHeader(),\n\n              params: {\n                post_id: idsString\n              }\n            };\n            //send request again\n            axios\n              .get(url, config)\n              .then(response => {\n                //if data comes successfully then update posts\n                updateMarkersFromResponse(response);\n              }).catch(err => {\n                //if error in second time fetch\n                message.error(err.response.statusText);\n              });\n          }).catch(err => {\n            //if there is error with error in fetching token\n            logout();\n          });\n        }\n        console.log(\"Error Reading data \" + err);\n      });\n  }\n\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      subheader={\n        <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n          <div>\n            <p>Posts</p>\n            <div style={{\n              display: \"flex\",\n              textAlign: \"center\"\n            }}>\n              <Checkbox checked={showAll} value={\"Show All\"} onChange={() => setShowAll(!showAll)} />\n              <p>Show all</p>\n            </div>\n            <hr />\n          </div>\n        </ListSubheader>\n      }\n      className={classes.root}\n    >\n      {posts.map((post, index) => {\n        var markersOfThisPost = filteredMarkers.filter(\n          (marker) => marker.postID === post.id\n        );\n        return (\n          <PostListItem\n            postTitle={post.title}\n            postID={post.id}\n            markers={markersOfThisPost}\n            onMarkerClick={handleMarkerClick}\n            onPostItemClick={handlePostsClick}\n            innerKey={post.key}\n            key={index}\n            selected={post.id===selectedPostID}\n          />\n        );\n      })}\n    </List>\n  );\n}\n",["141","142"],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/contexts/AuthContext/AuthProvider.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/Signup/Signup.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/Search/Search.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/helpers/localStorage.js",[],["143","144"],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/hooks/useFormData.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/Inputbox/Inputbox.js",[],["145","146"],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/UsersList/UsersList.js",[],["147","148"],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/Menu/Menu.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/classFiltersList/ClassFiltersList.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/helpers/calendar.js",[],["149","150"],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/Date/Date.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/Home/Home.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/helpers/postsHandlingUtils.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/PostsPage/PostMapPage.js",["151","152","153"],"//react stuff\nimport React, { useEffect, useContext } from \"react\";\n//to send requests to server\nimport axios from \"axios\";\n//must be included for maps\nimport \"leaflet/dist/leaflet.css\";\n//for showing maps\nimport {\n  MapContainer,\n  TileLayer,\n  Marker,\n  Popup,\n  Polyline,\n  useMap\n} from \"react-leaflet-3\";\n//pages own css\nimport \"./postMapPage.css\";\n//for showing marker currently\nimport L from \"leaflet\";\n//class filters side component\nimport ClassFiltersList from \"../../components/classFiltersList/ClassFiltersList\";\n//context for the whole page\nimport { PostsContext } from \"../../contexts/PostsContext/postContext\";\n//to get random options for post path vector\nimport { getRandomColorOptions } from \"../../helpers/postsHandlingUtils\";\n//side list component for showing post lists\nimport PostList from \"../../components/postList/PostList\";\n//sending request needs access token stored\nimport { getAccessAuthHeader } from \"../../helpers/localStorage\";\n//urls on which requests will be sent\nimport { GET_POSTS_BY_DATE_RANGE, BASE } from \"../../helpers/routes\";\n//marker icons for map\nimport icon from \"leaflet/dist/images/marker-icon.png\";\nimport iconShadow from \"leaflet/dist/images/marker-shadow.png\";\n//auth context for whole application\nimport { authContext } from \"../../contexts/AuthContext/AuthProvider\";\n//to show success or error messages\nimport { message } from \"antd\";\n//side menu for page\nimport Menu from \"../../components/Menu/Menu\";\n\n//-----setting marker icon settings and stuff------\nlet DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow,\n  iconAnchor: [12, 41],\n});\n\nL.Marker.prototype.options.icon = DefaultIcon;\n\n//-------------------------------------------------\n\nfunction PostMapPage() {\n  //stuff imported from page context that will be used here\n  const {\n    filteredPosts//these posts will be rendered on map\n    , center//center for the whole map\n    , markerToShow//the only marker that will be shown at a time\n    , updatePostsFromResponse// function that will parse posts data and update posts state\n    , dates// dates for which posts will be fetched from server.\n    , setCenter,\n    posts,\n    setSelectedPostID\n  } = useContext(\n    PostsContext\n  );\n\n  //auth stuff imported from auth context\n  const {\n    refreshAccessToken //function to refresh access token if it expires {returns promise}\n    , logout // function to logout if something happens in auth process\n  } = useContext(authContext);\n\n  //will be called once the page is loaded with empty data and everytime dependencies changes\n  useEffect(() => {\n    const fetchData = () => {\n      //configuration for get request\n      const config = {\n        //access token in header for jwt auth\n        headers: getAccessAuthHeader(),\n        //start date and end date as url get patterns\n        params: {\n          start_date: dates[0],\n          end_date: dates[1]\n        }\n      };\n      //url for getting posts from urls file\n      const url = GET_POSTS_BY_DATE_RANGE;\n      //perform get request with config\n      axios\n        .get(url, config)\n        .then((response) => {\n          //if request successfully gets data them clean and update state\n          console.log(response.data);\n          updatePostsFromResponse(response);\n        })\n        .catch((err) => {\n          //if we get some error the\n          //if it is error due to token invalidation\n          if (err.response.status === 401) {\n            //refresh the token\n            refreshAccessToken().then((response) => {\n              //if refresh token is successful\n              //perform request again\n              const config = {\n                headers: getAccessAuthHeader(),\n\n                params: {\n                  start_date: dates[0],\n                  end_date: dates[1]\n                }\n              };\n              //send request again\n              axios\n                .get(url, config)\n                .then(response => {\n                  //if data comes successfully then update posts\n                  updatePostsFromResponse(response);\n                }).catch(err => {\n                //if error in second time fetch\n                message.error(err.response.statusText);\n              });\n            }).catch(err => {\n              //if there is error with error in fetching token\n              logout();\n            });\n          }\n          // If the error is not because of token\n          console.log(\"Error Reading data \" + err);\n        });\n    };\n    fetchData();\n  }, [dates]);\n\n  /**\n   * invisible component inside map to move maps visible area\n   * @param center- new center for map\n   * @param zoom- new zoom level for map\n   */\n  function ChangeView({ center, zoom }) {\n    const map = useMap();\n    map.setView(center, zoom);\n    return null;\n  }\n\n  /**\n   * Marker component to be rendered on map\n   * @param props- contains marker object\n   * @returns {JSX.Element}\n   */\n  function CustomMarker(props) {\n    return (\n      <Marker\n        position={[props.marker.lat, props.marker.lon]}\n        key={props.marker.id}\n      >\n        <Popup>\n          <img\n            src={BASE + props.marker.imagePath.substring(1)}\n            width={200}\n            height={200}\n          />\n        </Popup>\n      </Marker>\n    );\n  }\n\n  useEffect(() => {\n    posts?.map(p=>setCenter(p.completePath[0]))\n  }, [posts]);\n\n  function handleVectorClick(postid) {\n    setSelectedPostID(postid)\n  }\n\n  return (\n    <div className=\"posts-container\">\n      <Menu />\n      <div className=\"map-container-mine\">\n        <MapContainer\n          center={center}\n          zoom={25}\n          scrollWheelZoom={true}\n          style={{ height: \"100vh\" }}\n        >\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          <ChangeView center={center} zoom={25} scrollWheelZoom={false} />\n          {filteredPosts.map((post) => (\n            <Polyline\n              pathOptions={getRandomColorOptions()}\n              positions={post.completePath}\n              key={post.id}\n              eventHandlers={{\n                click: () => {\n                  handleVectorClick(post.id);\n                }\n              }}\n            />\n          ))}\n          {markerToShow !== null ? (\n            <CustomMarker marker={markerToShow} center={center} zoom={25} />\n          ) : null}\n        </MapContainer>\n      </div>\n      <div className=\"side-lists\">\n        <ClassFiltersList />\n        <PostList />\n      </div>\n    </div>\n  );\n}\n\nexport default PostMapPage;\n","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/App.js",["154"],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/ROISearch/ROISearch.js",["155","156"],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/index.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/contexts/PostsContext/postContext.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/pages/Admin/Admin.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/helpers/routes.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/SigninForm/SigninForm.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/Footer/Footer.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/UserDetails/UserDetails.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/NavigationIcon/NavigationIcon.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/FileUploader/FileUploader.js",["157"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport 'antd/dist/antd.css';\nimport { Upload, Progress, Alert } from \"antd\";\nimport { getAccessToken } from '../../helpers/localStorage'\nimport { UPLOAD_FILE } from '../../helpers/routes'\n\nfunction FileUploader(props) {\n    const [title, setTitle] = useState(\"\");\n    const [titleError, setTitleError] = useState(false);\n    const [initalTitleError, setInitalTitleError] = useState(true);\n\n    const [defaultFileList, setDefaultFileList] = useState([]);\n    const [progress, setProgress] = useState(0);\n\n    const beforeUpload = (file, fileList) => {\n        console.log(\"before upload\");\n        if (title === \"\") {\n            setTitleError(true);\n            return false;\n        }\n        setTitleError(false);\n        return true;\n    };\n    const uploadFile = async (options) => {\n        const { onSuccess, onError, file, onProgress } = options;\n        //this hardcoded stuff should be changed {\n        const accessToken =\n            \"Bearer \" + getAccessToken();\n        const fmData = new FormData();\n        // }\n        const config = {\n            headers: {\n                \"content-type\": \"multipart/form-data\",\n                Authorization: accessToken,\n            },\n            onUploadProgress: (event) => {\n                const percent = Math.floor((event.loaded / event.total) * 100);\n                setProgress(percent);\n                if (percent === 100) {\n                    setTimeout(() => setProgress(0), 1000);\n                }\n                onProgress({ percent: (event.loaded / event.total) * 100 });\n            },\n        };\n        fmData.append(\"data_file\", file);\n        fmData.append(\"title\", title);\n        try {\n            const res = await axios.post(UPLOAD_FILE, fmData, config);\n\n            onSuccess(\"Ok\");\n            console.log(\"server res: \", res);\n        } catch (err) {\n            console.log(\"Eroor: \", err);\n            const error = new Error(\"Some error\");\n            onError({ err });\n        }\n    };\n\n    const handleOnChange = ({ file, fileList, event }) => {\n        setDefaultFileList(fileList);\n    };\n    return (\n        <div>\n            {titleError ? (\n                <Alert\n                    message=\"Error\"\n                    description=\"Title cannot be empty.\"\n                    type=\"error\"\n                    showIcon\n                />\n            ) : null}\n            <h1>New Post</h1>\n            <textarea\n                type=\"text\"\n                placeholder=\"Enter title\"\n                value={title}\n                onChange={(e) => {\n                    setInitalTitleError(false);\n                    if (e.target.value === \"\") {\n                        setTitleError(true);\n                    } else {\n                        setTitleError(false);\n                    }\n                    setTitle(e.target.value);\n                }}\n            />\n\n            <div className=\"container\">\n                <Upload\n                    type=\"file\"\n                    accept=\"file/*,.enc\"\n                    customRequest={uploadFile}\n                    onChange={handleOnChange}\n                    listType=\"picture-card\"\n                    defaultFileList={defaultFileList}\n                    className=\"image-upload-grid\"\n                    disabled={titleError || initalTitleError}\n                    beforeUpload={beforeUpload}\n                >\n                    {defaultFileList.length >= 1 ? null : <div>Upload Button</div>}\n                </Upload>\n                {progress > 0 ? <Progress percent={progress} /> : null}\n            </div>\n        </div>\n    );\n}\n\nexport default FileUploader;","/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/DataVisualizationSVG/DataVisualizationSVG.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/RscaLogo/RscaLogo.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/SignupForm/SignupForm.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/User/User.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/Calendar/Calendar.js",[],"/Users/muneeburrehman/WebstormProjects/rsca_frontend/src/components/postList/PostListItem.js",["158"],"import React, { useContext, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport RoomOutlinedIcon from \"@material-ui/icons/RoomOutlined\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { PostsContext } from \"../../contexts/PostsContext/postContext\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  nested: {\n    paddingLeft: theme.spacing(4)\n  }\n}));\n\nexport default function PostListItem(props) {\n  const {\n    removePostFromFilteredPosts,\n    importPostFromFilteredPosts,\n    showAll,\n    setSelectedPostID\n  } = useContext(PostsContext);\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState(showAll);\n\n\n  const handleClick = () => {\n    console.log(\"handle click called\");\n    if (!checked) {\n      return;\n    } else {\n      props.onPostItemClick(props.postID, checked);\n    }\n\n  };\n\n  const handleCheckChange = () => {\n\n    if(checked){\n      setSelectedPostID(-1)\n      removePostFromFilteredPosts(props.postID)\n    }else{\n      setSelectedPostID(props.postID)\n      importPostFromFilteredPosts(props.postID)\n    }\n    setChecked(!checked);\n  };\n\n\n  useEffect(()=>{\n    setChecked(showAll)\n    setSelectedPostID(-1)\n  },[showAll])\n\n  return (\n    <div>\n      <ListItem button key={props.innerKey} selected={props.selected} autoFocus={props.selected}>\n        <ListItemIcon>\n          <Checkbox\n            edge=\"start\"\n            checked={checked}\n            tabIndex={-1}\n            disableRipple\n            inputProps={{ \"aria-labelledby\": props.postID }}\n            onChange={handleCheckChange}\n          />\n        </ListItemIcon>\n        <ListItemText primary={props.postTitle} id={props.postID} onClick={handleClick} />\n        {(props.selected) ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={(props.selected)} timeout=\"auto\" unmountOnExit>\n        {props.markers ? (\n          <List component=\"div\" disablePadding>\n            {props.markers.map((marker) => (\n              <ListItem\n                button\n                className={classes.nested}\n                onClick={() => props.onMarkerClick(marker.id)}\n                key={marker.id}\n              >\n                <ListItemIcon>\n                  <RoomOutlinedIcon />\n                </ListItemIcon>\n                <ListItemText\n                  primary={\n                    \"Post ID: \" +\n                    marker.postID +\n                    \" | Classes :\" +\n                    marker.classes\n                  }\n                />\n              </ListItem>\n            ))}\n          </List>\n        ) : null}\n      </Collapse>\n    </div>\n  );\n}\n",{"ruleId":"159","severity":1,"message":"160","line":71,"column":6,"nodeType":"161","endLine":71,"endColumn":15,"suggestions":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"163","replacedBy":"167"},{"ruleId":"165","replacedBy":"168"},{"ruleId":"163","replacedBy":"169"},{"ruleId":"165","replacedBy":"170"},{"ruleId":"163","replacedBy":"171"},{"ruleId":"165","replacedBy":"172"},{"ruleId":"163","replacedBy":"173"},{"ruleId":"165","replacedBy":"174"},{"ruleId":"159","severity":1,"message":"175","line":133,"column":6,"nodeType":"161","endLine":133,"endColumn":13,"suggestions":"176"},{"ruleId":"177","severity":1,"message":"178","line":158,"column":11,"nodeType":"179","endLine":162,"endColumn":13},{"ruleId":"159","severity":1,"message":"180","line":170,"column":6,"nodeType":"161","endLine":170,"endColumn":13,"suggestions":"181"},{"ruleId":"182","severity":1,"message":"183","line":2,"column":25,"nodeType":"184","messageId":"185","endLine":2,"endColumn":29},{"ruleId":"182","severity":1,"message":"186","line":1,"column":40,"nodeType":"184","messageId":"185","endLine":1,"endColumn":50},{"ruleId":"182","severity":1,"message":"187","line":7,"column":10,"nodeType":"184","messageId":"185","endLine":7,"endColumn":16},{"ruleId":"182","severity":1,"message":"188","line":55,"column":19,"nodeType":"184","messageId":"185","endLine":55,"endColumn":24},{"ruleId":"159","severity":1,"message":"189","line":63,"column":5,"nodeType":"161","endLine":63,"endColumn":14,"suggestions":"190"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'populateFilteredPostsWithAll' and 'resetFilteredPosts'. Either include them or remove the dependency array.","ArrayExpression",["191"],"no-native-reassign",["192"],"no-negated-in-lhs",["193"],["192"],["193"],["192"],["193"],["192"],["193"],["192"],["193"],"React Hook useEffect has missing dependencies: 'logout', 'refreshAccessToken', and 'updatePostsFromResponse'. Either include them or remove the dependency array.",["194"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'setCenter'. Either include it or remove the dependency array.",["195"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'MapControl' is defined but never used.","'Button' is defined but never used.","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setSelectedPostID'. Either include it or remove the dependency array.",["196"],{"desc":"197","fix":"198"},"no-global-assign","no-unsafe-negation",{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},"Update the dependencies array to be: [populateFilteredPostsWithAll, resetFilteredPosts, showAll]",{"range":"205","text":"206"},"Update the dependencies array to be: [dates, logout, refreshAccessToken, updatePostsFromResponse]",{"range":"207","text":"208"},"Update the dependencies array to be: [posts, setCenter]",{"range":"209","text":"210"},"Update the dependencies array to be: [setSelectedPostID, showAll]",{"range":"211","text":"212"},[1999,2008],"[populateFilteredPostsWithAll, resetFilteredPosts, showAll]",[4496,4503],"[dates, logout, refreshAccessToken, updatePostsFromResponse]",[5334,5341],"[posts, setCenter]",[1676,1685],"[setSelectedPostID, showAll]"]